// Generated by OABuilder

package com.cdi.model;

import java.util.logging.*;
import com.viaoa.object.*;
import com.viaoa.annotation.*;
import com.viaoa.datasource.*;
import com.viaoa.hub.*;
import com.viaoa.util.*;
import com.viaoa.util.filter.*;
import com.viaoa.filter.OAInFilter;
import com.cdi.model.oa.*;
import com.cdi.model.oa.propertypath.*;
import com.cdi.model.oa.search.*;
import com.cdi.model.oa.filter.*;
import com.cdi.model.search.*;
import com.cdi.model.filter.*;
import com.cdi.delegate.ModelDelegate;
import com.cdi.resource.Resource;

public class DeliveryTruckModel extends OAObjectModel {
    private static Logger LOG = Logger.getLogger(DeliveryTruckModel.class.getName());
    
    // Hubs
    protected Hub<DeliveryTruck> hub;
    // selected deliveryTrucks
    protected Hub<DeliveryTruck> hubMultiSelect;
    // detail hubs
    protected Hub<Delivery> hubDelivery;
    protected Hub<Truck> hubTruck;
    protected Hub<WODelivery> hubWODeliveries;
    
    // ObjectModels
    protected DeliveryModel modelDelivery;
    protected TruckModel modelTruck;
    protected WODeliveryModel modelWODeliveries;
    
    // SearchModels used for references
    protected DeliverySearchModel modelDeliverySearch;
    protected WODeliverySearchModel modelWODeliveriesSearch;
    
    public DeliveryTruckModel() {
        setDisplayName("Delivery Truck");
        setPluralDisplayName("Delivery Trucks");
    }
    
    public DeliveryTruckModel(Hub<DeliveryTruck> hubDeliveryTruck) {
        this();
        if (hubDeliveryTruck != null) HubDelegate.setObjectClass(hubDeliveryTruck, DeliveryTruck.class);
        this.hub = hubDeliveryTruck;
    }
    public DeliveryTruckModel(DeliveryTruck deliveryTruck) {
        this();
        getHub().add(deliveryTruck);
        getHub().setPos(0);
    }
    
    public Hub<DeliveryTruck> getOriginalHub() {
        return getHub();
    }
    
    public Hub<Delivery> getDeliveryHub() {
        if (hubDelivery != null) return hubDelivery;
        hubDelivery = getHub().getDetailHub(DeliveryTruck.P_Delivery);
        return hubDelivery;
    }
    public Hub<Truck> getTruckHub() {
        if (hubTruck != null) return hubTruck;
        hubTruck = getHub().getDetailHub(DeliveryTruck.P_Truck);
        return hubTruck;
    }
    public Hub<WODelivery> getWODeliveries() {
        if (hubWODeliveries == null) {
            hubWODeliveries = getHub().getDetailHub(DeliveryTruck.P_WODeliveries);
        }
        return hubWODeliveries;
    }
    public DeliveryTruck getDeliveryTruck() {
        return getHub().getAO();
    }
    
    public Hub<DeliveryTruck> getHub() {
        if (hub == null) {
            hub = new Hub<DeliveryTruck>(DeliveryTruck.class);
        }
        return hub;
    }
    
    public Hub<DeliveryTruck> getMultiSelectHub() {
        if (hubMultiSelect == null) {
            hubMultiSelect = new Hub<DeliveryTruck>(DeliveryTruck.class);
        }
        return hubMultiSelect;
    }
    
    public DeliveryModel getDeliveryModel() {
        if (modelDelivery != null) return modelDelivery;
        modelDelivery = new DeliveryModel(getDeliveryHub());
        modelDelivery.setDisplayName("Delivery");
        modelDelivery.setPluralDisplayName("Deliveries");
        modelDelivery.setForJfc(getForJfc());
        modelDelivery.setAllowNew(false);
        modelDelivery.setAllowSave(true);
        modelDelivery.setAllowAdd(false);
        modelDelivery.setAllowRemove(true);
        modelDelivery.setAllowClear(true);
        modelDelivery.setAllowDelete(false);
        modelDelivery.setAllowSearch(true);
        modelDelivery.setAllowHubSearch(true);
        modelDelivery.setAllowGotoEdit(true);
        OALinkInfo li = HubDetailDelegate.getLinkInfoFromDetailToMaster(getOriginalHub());
        modelDelivery.setCreateUI(li == null || !DeliveryTruck.P_Delivery.equals(li.getName()) );
        modelDelivery.setViewOnly(true);
        // call DeliveryTruck.onEditQueryDelivery(DeliveryModel) to be able to customize this model
        OAObjectCallbackDelegate.onObjectCallbackModel(DeliveryTruck.class, DeliveryTruck.P_Delivery, modelDelivery);
    
        return modelDelivery;
    }
    public TruckModel getTruckModel() {
        if (modelTruck != null) return modelTruck;
        modelTruck = new TruckModel(getTruckHub());
        modelTruck.setDisplayName("Truck");
        modelTruck.setPluralDisplayName("Trucks");
        modelTruck.setForJfc(getForJfc());
        modelTruck.setAllowNew(false);
        modelTruck.setAllowSave(true);
        modelTruck.setAllowAdd(false);
        modelTruck.setAllowRemove(false);
        modelTruck.setAllowClear(false);
        modelTruck.setAllowDelete(false);
        modelTruck.setAllowSearch(false);
        modelTruck.setAllowHubSearch(true);
        modelTruck.setAllowGotoEdit(true);
        OALinkInfo li = HubDetailDelegate.getLinkInfoFromDetailToMaster(getOriginalHub());
        modelTruck.setCreateUI(li == null || !DeliveryTruck.P_Truck.equals(li.getName()) );
        modelTruck.setViewOnly(getViewOnly());
        // call DeliveryTruck.onEditQueryTruck(TruckModel) to be able to customize this model
        OAObjectCallbackDelegate.onObjectCallbackModel(DeliveryTruck.class, DeliveryTruck.P_Truck, modelTruck);
    
        return modelTruck;
    }
    public WODeliveryModel getWODeliveriesModel() {
        if (modelWODeliveries != null) return modelWODeliveries;
        modelWODeliveries = new WODeliveryModel(getWODeliveries());
        modelWODeliveries.setDisplayName("WO Delivery");
        modelWODeliveries.setPluralDisplayName("WO Deliveries");
        if (HubDetailDelegate.getLinkInfoFromMasterToDetail(getOriginalHub().getMasterHub()) == HubDetailDelegate.getLinkInfoFromMasterToDetail(getWODeliveries())) {
            modelWODeliveries.setCreateUI(false);
        }
        modelWODeliveries.setForJfc(getForJfc());
        modelWODeliveries.setAllowNew(false);
        modelWODeliveries.setAllowSave(true);
        modelWODeliveries.setAllowAdd(true);
        modelWODeliveries.setAllowMove(false);
        modelWODeliveries.setAllowRemove(true);
        modelWODeliveries.setAllowDelete(false);
        modelWODeliveries.setAllowSearch(false);
        modelWODeliveries.setAllowHubSearch(false);
        modelWODeliveries.setAllowGotoEdit(true);
        modelWODeliveries.setViewOnly(getViewOnly());
        modelWODeliveries.setAllowTableFilter(true);
        modelWODeliveries.setAllowTableSorting(true);
         // default is always false for these, can be turned by custom code in editQuery call (below)
        modelWODeliveries.setAllowMultiSelect(false);
        modelWODeliveries.setAllowCopy(false);
        modelWODeliveries.setAllowCut(false);
        modelWODeliveries.setAllowPaste(false);
        // call DeliveryTruck.onEditQueryWODeliveries(WODeliveryModel) to be able to customize this model
        OAObjectCallbackDelegate.onObjectCallbackModel(DeliveryTruck.class, DeliveryTruck.P_WODeliveries, modelWODeliveries);
    
        return modelWODeliveries;
    }
    
    public DeliverySearchModel getDeliverySearchModel() {
        if (modelDeliverySearch != null) return modelDeliverySearch;
        modelDeliverySearch = new DeliverySearchModel();
        return modelDeliverySearch;
    }
    public WODeliverySearchModel getWODeliveriesSearchModel() {
        if (modelWODeliveriesSearch != null) return modelWODeliveriesSearch;
        modelWODeliveriesSearch = new WODeliverySearchModel() {
            @Override
            public void performSearch() {
                DeliveryTruck deliveryTruck = DeliveryTruckModel.this.getHub().getAO();
                if (deliveryTruck == null) {
                    // dont allow search, cant apply required filter
                    getHub().clear();
                    return;
                }
                OAFilter filter = new OAInFilter(deliveryTruck, DeliveryTruckPP.delivery().woDeliveries().pp);
                getWODeliverySearch().setExtraWhereFilter(filter);
                super.performSearch();
            }
        };
        return modelWODeliveriesSearch;
    }
    
    public HubCopy<DeliveryTruck> createHubCopy() {
        Hub<DeliveryTruck> hubDeliveryTruckx = new Hub<>(DeliveryTruck.class);
        HubCopy<DeliveryTruck> hc = new HubCopy<>(getHub(), hubDeliveryTruckx, true);
        return hc;
    }
    public DeliveryTruckModel createCopy() {
        DeliveryTruckModel mod = new DeliveryTruckModel(createHubCopy().getHub());
        return mod;
    }
}

