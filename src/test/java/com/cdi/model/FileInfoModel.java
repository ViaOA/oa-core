// Generated by OABuilder

package com.cdi.model;

import java.util.logging.*;
import com.viaoa.object.*;
import com.viaoa.annotation.*;
import com.viaoa.hub.*;
import com.viaoa.util.*;
import com.viaoa.util.filter.*;
import com.viaoa.ds.*;

import com.cdi.model.oa.*;
import com.cdi.model.oa.propertypath.*;
import com.cdi.model.oa.search.*;
import com.cdi.model.oa.filter.*;
import com.cdi.model.search.*;
import com.cdi.model.filter.*;
import com.cdi.delegate.ModelDelegate;
import com.cdi.resource.Resource;

public class FileInfoModel extends OAObjectModel {
    private static Logger LOG = Logger.getLogger(FileInfoModel.class.getName());
    
    // Hubs
    protected Hub<FileInfo> hub;
    // selected fileInfos
    protected Hub<FileInfo> hubMultiSelect;
    
    
    public FileInfoModel() {
        setDisplayName("File Info");
        setPluralDisplayName("File Infos");
    }
    
    public FileInfoModel(Hub<FileInfo> hubFileInfo) {
        this();
        if (hubFileInfo != null) HubDelegate.setObjectClass(hubFileInfo, FileInfo.class);
        this.hub = hubFileInfo;
    }
    public FileInfoModel(FileInfo fileInfo) {
        this();
        getHub().add(fileInfo);
        getHub().setPos(0);
    }
    
    public Hub<FileInfo> getOriginalHub() {
        return getHub();
    }
    
    public FileInfo getFileInfo() {
        return getHub().getAO();
    }
    
    public Hub<FileInfo> getHub() {
        if (hub == null) {
            hub = new Hub<FileInfo>(FileInfo.class);
        }
        return hub;
    }
    
    public Hub<FileInfo> getMultiSelectHub() {
        if (hubMultiSelect == null) {
            hubMultiSelect = new Hub<FileInfo>(FileInfo.class);
        }
        return hubMultiSelect;
    }
    
    public HubCopy<FileInfo> createHubCopy() {
        Hub<FileInfo> hubFileInfox = new Hub<>(FileInfo.class);
        HubCopy<FileInfo> hc = new HubCopy<>(getHub(), hubFileInfox, true);
        return hc;
    }
    public FileInfoModel createCopy() {
        FileInfoModel mod = new FileInfoModel(createHubCopy().getHub());
        return mod;
    }
}

