// Generated by OABuilder

package com.cdi.model;

import java.util.logging.*;
import com.viaoa.object.*;
import com.viaoa.annotation.*;
import com.viaoa.datasource.*;
import com.viaoa.hub.*;
import com.viaoa.util.*;
import com.viaoa.util.filter.*;
import com.cdi.model.oa.*;
import com.cdi.model.oa.propertypath.*;
import com.cdi.model.oa.search.*;
import com.cdi.model.oa.filter.*;
import com.cdi.model.search.*;
import com.cdi.model.filter.*;
import com.cdi.delegate.ModelDelegate;
import com.cdi.resource.Resource;

public class OrderItemCommentModel extends OAObjectModel {
    private static Logger LOG = Logger.getLogger(OrderItemCommentModel.class.getName());
    
    // Hubs
    protected Hub<OrderItemComment> hub;
    // selected orderItemComments
    protected Hub<OrderItemComment> hubMultiSelect;
    // detail hubs
    protected Hub<OrderItem> hubOrderItem;
    
    // ObjectModels
    protected OrderItemModel modelOrderItem;
    
    public OrderItemCommentModel() {
        setDisplayName("Order Item Comment");
        setPluralDisplayName("Order Item Comments");
    }
    
    public OrderItemCommentModel(Hub<OrderItemComment> hubOrderItemComment) {
        this();
        if (hubOrderItemComment != null) HubDelegate.setObjectClass(hubOrderItemComment, OrderItemComment.class);
        this.hub = hubOrderItemComment;
    }
    public OrderItemCommentModel(OrderItemComment orderItemComment) {
        this();
        getHub().add(orderItemComment);
        getHub().setPos(0);
    }
    
    public Hub<OrderItemComment> getOriginalHub() {
        return getHub();
    }
    
    public Hub<OrderItem> getOrderItemHub() {
        if (hubOrderItem != null) return hubOrderItem;
        // this is the owner, use detailHub
        hubOrderItem = getHub().getDetailHub(OrderItemComment.P_OrderItem);
        return hubOrderItem;
    }
    public OrderItemComment getOrderItemComment() {
        return getHub().getAO();
    }
    
    public Hub<OrderItemComment> getHub() {
        if (hub == null) {
            hub = new Hub<OrderItemComment>(OrderItemComment.class);
        }
        return hub;
    }
    
    public Hub<OrderItemComment> getMultiSelectHub() {
        if (hubMultiSelect == null) {
            hubMultiSelect = new Hub<OrderItemComment>(OrderItemComment.class);
        }
        return hubMultiSelect;
    }
    
    public OrderItemModel getOrderItemModel() {
        if (modelOrderItem != null) return modelOrderItem;
        modelOrderItem = new OrderItemModel(getOrderItemHub());
        modelOrderItem.setDisplayName("Order Item");
        modelOrderItem.setPluralDisplayName("Order Items");
        modelOrderItem.setForJfc(getForJfc());
        modelOrderItem.setAllowNew(false);
        modelOrderItem.setAllowSave(true);
        modelOrderItem.setAllowAdd(false);
        modelOrderItem.setAllowRemove(false);
        modelOrderItem.setAllowClear(false);
        modelOrderItem.setAllowDelete(false);
        modelOrderItem.setAllowSearch(false);
        modelOrderItem.setAllowHubSearch(true);
        modelOrderItem.setAllowGotoEdit(true);
        OALinkInfo li = HubDetailDelegate.getLinkInfoFromDetailToMaster(getOriginalHub());
        modelOrderItem.setCreateUI(li == null || !OrderItemComment.P_OrderItem.equals(li.getName()) );
        modelOrderItem.setViewOnly(getViewOnly());
        // call OrderItemComment.onEditQueryOrderItem(OrderItemModel) to be able to customize this model
        OAObjectCallbackDelegate.onObjectCallbackModel(OrderItemComment.class, OrderItemComment.P_OrderItem, modelOrderItem);
    
        return modelOrderItem;
    }
    
    public HubCopy<OrderItemComment> createHubCopy() {
        Hub<OrderItemComment> hubOrderItemCommentx = new Hub<>(OrderItemComment.class);
        HubCopy<OrderItemComment> hc = new HubCopy<>(getHub(), hubOrderItemCommentx, true);
        return hc;
    }
    public OrderItemCommentModel createCopy() {
        OrderItemCommentModel mod = new OrderItemCommentModel(createHubCopy().getHub());
        return mod;
    }
}

