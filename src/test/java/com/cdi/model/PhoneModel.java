// Generated by OABuilder

package com.cdi.model;

import java.util.logging.*;
import com.viaoa.object.*;
import com.viaoa.annotation.*;
import com.viaoa.datasource.*;
import com.viaoa.hub.*;
import com.viaoa.util.*;
import com.viaoa.util.filter.*;
import com.cdi.model.oa.*;
import com.cdi.model.oa.propertypath.*;
import com.cdi.model.oa.search.*;
import com.cdi.model.oa.filter.*;
import com.cdi.model.search.*;
import com.cdi.model.filter.*;
import com.cdi.delegate.ModelDelegate;
import com.cdi.resource.Resource;

public class PhoneModel extends OAObjectModel {
    private static Logger LOG = Logger.getLogger(PhoneModel.class.getName());
    
    // Hubs
    protected Hub<Phone> hub;
    // selected phones
    protected Hub<Phone> hubMultiSelect;
    // detail hubs
    protected Hub<Contact> hubContact;
    
    // ObjectModels
    protected ContactModel modelContact;
    
    public PhoneModel() {
        setDisplayName("Phone");
        setPluralDisplayName("Phones");
    }
    
    public PhoneModel(Hub<Phone> hubPhone) {
        this();
        if (hubPhone != null) HubDelegate.setObjectClass(hubPhone, Phone.class);
        this.hub = hubPhone;
    }
    public PhoneModel(Phone phone) {
        this();
        getHub().add(phone);
        getHub().setPos(0);
    }
    
    public Hub<Phone> getOriginalHub() {
        return getHub();
    }
    
    public Hub<Contact> getContactHub() {
        if (hubContact != null) return hubContact;
        // this is the owner, use detailHub
        hubContact = getHub().getDetailHub(Phone.P_Contact);
        return hubContact;
    }
    public Phone getPhone() {
        return getHub().getAO();
    }
    
    public Hub<Phone> getHub() {
        if (hub == null) {
            hub = new Hub<Phone>(Phone.class);
        }
        return hub;
    }
    
    public Hub<Phone> getMultiSelectHub() {
        if (hubMultiSelect == null) {
            hubMultiSelect = new Hub<Phone>(Phone.class);
        }
        return hubMultiSelect;
    }
    
    public ContactModel getContactModel() {
        if (modelContact != null) return modelContact;
        modelContact = new ContactModel(getContactHub());
        modelContact.setDisplayName("Contact");
        modelContact.setPluralDisplayName("Contacts");
        modelContact.setForJfc(getForJfc());
        modelContact.setAllowNew(false);
        modelContact.setAllowSave(true);
        modelContact.setAllowAdd(false);
        modelContact.setAllowRemove(false);
        modelContact.setAllowClear(false);
        modelContact.setAllowDelete(false);
        modelContact.setAllowSearch(false);
        modelContact.setAllowHubSearch(true);
        modelContact.setAllowGotoEdit(true);
        OALinkInfo li = HubDetailDelegate.getLinkInfoFromDetailToMaster(getOriginalHub());
        modelContact.setCreateUI(li == null || !Phone.P_Contact.equals(li.getName()) );
        modelContact.setViewOnly(getViewOnly());
        // call Phone.onEditQueryContact(ContactModel) to be able to customize this model
        OAObjectEditQueryDelegate.onEditQueryModel(Phone.class, Phone.P_Contact, modelContact);
    
        return modelContact;
    }
    
    public HubCopy<Phone> createHubCopy() {
        Hub<Phone> hubPhonex = new Hub<>(Phone.class);
        HubCopy<Phone> hc = new HubCopy<>(getHub(), hubPhonex, true);
        return hc;
    }
    public PhoneModel createCopy() {
        PhoneModel mod = new PhoneModel(createHubCopy().getHub());
        return mod;
    }
}

