// Generated by OABuilder

package com.cdi.model;

import java.util.logging.*;
import com.viaoa.object.*;
import com.viaoa.annotation.*;
import com.viaoa.datasource.*;
import com.viaoa.hub.*;
import com.viaoa.util.*;
import com.viaoa.util.filter.*;
import com.cdi.model.oa.*;
import com.cdi.model.oa.propertypath.*;
import com.cdi.model.oa.search.*;
import com.cdi.model.oa.filter.*;
import com.cdi.model.search.*;
import com.cdi.model.filter.*;
import com.cdi.delegate.ModelDelegate;
import com.cdi.resource.Resource;

public class SalesOrderSourceModel extends OAObjectModel {
    private static Logger LOG = Logger.getLogger(SalesOrderSourceModel.class.getName());
    
    // Hubs
    protected Hub<SalesOrderSource> hub;
    // selected salesOrderSources
    protected Hub<SalesOrderSource> hubMultiSelect;
    
    
    public SalesOrderSourceModel() {
        setDisplayName("Sales Order Source");
        setPluralDisplayName("Sales Order Sources");
    }
    
    public SalesOrderSourceModel(Hub<SalesOrderSource> hubSalesOrderSource) {
        this();
        if (hubSalesOrderSource != null) HubDelegate.setObjectClass(hubSalesOrderSource, SalesOrderSource.class);
        this.hub = hubSalesOrderSource;
    }
    public SalesOrderSourceModel(SalesOrderSource salesOrderSource) {
        this();
        getHub().add(salesOrderSource);
        getHub().setPos(0);
    }
    
    public Hub<SalesOrderSource> getOriginalHub() {
        return getHub();
    }
    
    public SalesOrderSource getSalesOrderSource() {
        return getHub().getAO();
    }
    
    public Hub<SalesOrderSource> getHub() {
        if (hub == null) {
            hub = new Hub<SalesOrderSource>(SalesOrderSource.class);
        }
        return hub;
    }
    
    public Hub<SalesOrderSource> getMultiSelectHub() {
        if (hubMultiSelect == null) {
            hubMultiSelect = new Hub<SalesOrderSource>(SalesOrderSource.class);
        }
        return hubMultiSelect;
    }
    
    public HubCopy<SalesOrderSource> createHubCopy() {
        Hub<SalesOrderSource> hubSalesOrderSourcex = new Hub<>(SalesOrderSource.class);
        HubCopy<SalesOrderSource> hc = new HubCopy<>(getHub(), hubSalesOrderSourcex, true);
        return hc;
    }
    public SalesOrderSourceModel createCopy() {
        SalesOrderSourceModel mod = new SalesOrderSourceModel(createHubCopy().getHub());
        return mod;
    }
}

