// Generated by OABuilder

package com.cdi.model;

import java.util.logging.*;
import com.viaoa.object.*;
import com.viaoa.annotation.*;
import com.viaoa.hub.*;
import com.viaoa.util.*;
import com.viaoa.util.filter.*;
import com.viaoa.ds.*;

import com.cdi.model.oa.*;
import com.cdi.model.oa.propertypath.*;
import com.cdi.model.oa.search.*;
import com.cdi.model.oa.filter.*;
import com.cdi.model.search.*;
import com.cdi.model.filter.*;
import com.cdi.delegate.ModelDelegate;
import com.cdi.resource.Resource;

public class SalesOrderStatusModel extends OAObjectModel {
    private static Logger LOG = Logger.getLogger(SalesOrderStatusModel.class.getName());
    
    // Hubs
    protected Hub<SalesOrderStatus> hub;
    // selected salesOrderStatuses
    protected Hub<SalesOrderStatus> hubMultiSelect;
    
    
    public SalesOrderStatusModel() {
        setDisplayName("Sales Order Status");
        setPluralDisplayName("Sales Order Statuses");
    }
    
    public SalesOrderStatusModel(Hub<SalesOrderStatus> hubSalesOrderStatus) {
        this();
        if (hubSalesOrderStatus != null) HubDelegate.setObjectClass(hubSalesOrderStatus, SalesOrderStatus.class);
        this.hub = hubSalesOrderStatus;
    }
    public SalesOrderStatusModel(SalesOrderStatus salesOrderStatus) {
        this();
        getHub().add(salesOrderStatus);
        getHub().setPos(0);
    }
    
    public Hub<SalesOrderStatus> getOriginalHub() {
        return getHub();
    }
    
    public SalesOrderStatus getSalesOrderStatus() {
        return getHub().getAO();
    }
    
    public Hub<SalesOrderStatus> getHub() {
        if (hub == null) {
            hub = new Hub<SalesOrderStatus>(SalesOrderStatus.class);
        }
        return hub;
    }
    
    public Hub<SalesOrderStatus> getMultiSelectHub() {
        if (hubMultiSelect == null) {
            hubMultiSelect = new Hub<SalesOrderStatus>(SalesOrderStatus.class);
        }
        return hubMultiSelect;
    }
    
    public HubCopy<SalesOrderStatus> createHubCopy() {
        Hub<SalesOrderStatus> hubSalesOrderStatusx = new Hub<>(SalesOrderStatus.class);
        HubCopy<SalesOrderStatus> hc = new HubCopy<>(getHub(), hubSalesOrderStatusx, true);
        return hc;
    }
    public SalesOrderStatusModel createCopy() {
        SalesOrderStatusModel mod = new SalesOrderStatusModel(createHubCopy().getHub());
        return mod;
    }
}

