// Generated by OABuilder

package com.cdi.model;

import java.util.logging.*;
import com.viaoa.object.*;
import com.viaoa.annotation.*;
import com.viaoa.datasource.*;
import com.viaoa.hub.*;
import com.viaoa.util.*;
import com.viaoa.util.filter.*;
import com.cdi.model.oa.*;
import com.cdi.model.oa.propertypath.*;
import com.cdi.model.oa.search.*;
import com.cdi.model.oa.filter.*;
import com.cdi.model.search.*;
import com.cdi.model.filter.*;
import com.cdi.delegate.ModelDelegate;
import com.cdi.resource.Resource;

public class TaxCodeModel extends OAObjectModel {
    private static Logger LOG = Logger.getLogger(TaxCodeModel.class.getName());
    
    // Hubs
    protected Hub<TaxCode> hub;
    // selected taxCodes
    protected Hub<TaxCode> hubMultiSelect;
    
    
    public TaxCodeModel() {
        setDisplayName("Tax Code");
        setPluralDisplayName("Tax Codes");
    }
    
    public TaxCodeModel(Hub<TaxCode> hubTaxCode) {
        this();
        if (hubTaxCode != null) HubDelegate.setObjectClass(hubTaxCode, TaxCode.class);
        this.hub = hubTaxCode;
    }
    public TaxCodeModel(TaxCode taxCode) {
        this();
        getHub().add(taxCode);
        getHub().setPos(0);
    }
    
    public Hub<TaxCode> getOriginalHub() {
        return getHub();
    }
    
    public TaxCode getTaxCode() {
        return getHub().getAO();
    }
    
    public Hub<TaxCode> getHub() {
        if (hub == null) {
            hub = new Hub<TaxCode>(TaxCode.class);
        }
        return hub;
    }
    
    public Hub<TaxCode> getMultiSelectHub() {
        if (hubMultiSelect == null) {
            hubMultiSelect = new Hub<TaxCode>(TaxCode.class);
        }
        return hubMultiSelect;
    }
    
    public HubCopy<TaxCode> createHubCopy() {
        Hub<TaxCode> hubTaxCodex = new Hub<>(TaxCode.class);
        HubCopy<TaxCode> hc = new HubCopy<>(getHub(), hubTaxCodex, true);
        return hc;
    }
    public TaxCodeModel createCopy() {
        TaxCodeModel mod = new TaxCodeModel(createHubCopy().getHub());
        return mod;
    }
}

