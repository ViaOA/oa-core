// Generated by OABuilder

package com.cdi.model;

import java.util.logging.*;
import com.viaoa.object.*;
import com.viaoa.annotation.*;
import com.viaoa.hub.*;
import com.viaoa.util.*;
import com.viaoa.util.filter.*;
import com.viaoa.ds.*;

import com.cdi.model.oa.*;
import com.cdi.model.oa.propertypath.*;
import com.cdi.model.oa.search.*;
import com.cdi.model.oa.filter.*;
import com.cdi.model.search.*;
import com.cdi.model.filter.*;
import com.cdi.delegate.ModelDelegate;
import com.cdi.resource.Resource;

public class TextureModel extends OAObjectModel {
    private static Logger LOG = Logger.getLogger(TextureModel.class.getName());
    
    // Hubs
    protected Hub<Texture> hub;
    // selected textures
    protected Hub<Texture> hubMultiSelect;
    
    
    public TextureModel() {
        setDisplayName("Texture");
        setPluralDisplayName("Textures");
    }
    
    public TextureModel(Hub<Texture> hubTexture) {
        this();
        if (hubTexture != null) HubDelegate.setObjectClass(hubTexture, Texture.class);
        this.hub = hubTexture;
    }
    public TextureModel(Texture texture) {
        this();
        getHub().add(texture);
        getHub().setPos(0);
    }
    
    public Hub<Texture> getOriginalHub() {
        return getHub();
    }
    
    public Texture getTexture() {
        return getHub().getAO();
    }
    
    public Hub<Texture> getHub() {
        if (hub == null) {
            hub = new Hub<Texture>(Texture.class);
        }
        return hub;
    }
    
    public Hub<Texture> getMultiSelectHub() {
        if (hubMultiSelect == null) {
            hubMultiSelect = new Hub<Texture>(Texture.class);
        }
        return hubMultiSelect;
    }
    
    public HubCopy<Texture> createHubCopy() {
        Hub<Texture> hubTexturex = new Hub<>(Texture.class);
        HubCopy<Texture> hc = new HubCopy<>(getHub(), hubTexturex, true);
        return hc;
    }
    public TextureModel createCopy() {
        TextureModel mod = new TextureModel(createHubCopy().getHub());
        return mod;
    }
}

