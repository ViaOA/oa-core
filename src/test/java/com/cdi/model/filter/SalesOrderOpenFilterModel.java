// Generated by OABuilder
package com.cdi.model.filter;

import java.util.logging.*;

import com.viaoa.object.*;
import com.viaoa.annotation.*;
import com.viaoa.hub.*;
import com.viaoa.util.*;
import com.viaoa.ds.*;

import com.cdi.model.*;
import com.cdi.model.oa.*;
import com.cdi.model.oa.propertypath.*;
import com.cdi.model.oa.filter.*;
import com.cdi.model.search.*;
import com.cdi.delegate.ModelDelegate;
import com.cdi.resource.Resource;

public class SalesOrderOpenFilterModel {
    private static Logger LOG = Logger.getLogger(SalesOrderOpenFilterModel.class.getName());
    
    // Hubs
    protected Hub<SalesOrderOpenFilter> hubFilter;
    
    // ObjectModels
    
    // object used for filter data
    protected SalesOrderOpenFilter filter;
    
    public SalesOrderOpenFilterModel(Hub<SalesOrder> hubMaster, Hub<SalesOrder> hub) {
        filter = new SalesOrderOpenFilter(hubMaster, hub);
    }
    public SalesOrderOpenFilterModel(Hub<SalesOrder> hub) {
        filter = new SalesOrderOpenFilter(hub);
    }
    
    // object used to input query data, to be used by filterHub
    public SalesOrderOpenFilter getFilter() {
        return filter;
    }
    
    // hub for filter UI object - used to bind with UI components for entering filter data
    public Hub<SalesOrderOpenFilter> getFilterHub() {
        if (hubFilter == null) {
            hubFilter = new Hub<SalesOrderOpenFilter>(SalesOrderOpenFilter.class);
            hubFilter.add(getFilter());
            hubFilter.setPos(0);
        }
        return hubFilter;
    }
    
    
    
    // get the Filtered hub
    public Hub<SalesOrder> getHub() {
        return getFilter().getHubFilter().getHub();
    }
}

