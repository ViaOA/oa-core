// Generated by OABuilder
package com.cdi.model.method;

import java.util.logging.*;

import com.viaoa.object.*;
import com.viaoa.annotation.*;
import com.viaoa.datasource.*;
import com.viaoa.hub.*;
import com.viaoa.util.*;
import com.cdi.model.*;
import com.cdi.model.oa.*;
import com.cdi.model.oa.filter.*;
import com.cdi.model.oa.method.*;
import com.cdi.model.search.*;
import com.cdi.delegate.ModelDelegate;
import com.cdi.resource.Resource;

public class SalesOrderItemAssignSameItemAddOnMethodModel {
    private static Logger LOG = Logger.getLogger(SalesOrderItemAssignSameItemAddOnMethodModel.class.getName());
    
    // Hubs
    protected Hub<SalesOrderItemAssignSameItemAddOnMethod> hub;
    protected Hub<ItemAddOn> hubItemAddOn;
    
    // ObjectModels
    protected ItemAddOnModel modelItemAddOn;
    
    // MethodModels
    protected ItemAddOnSearchModel modelItemAddOnSearch;
    
    // object used for method data
    protected SalesOrderItemAssignSameItemAddOnMethod method;
    
    public SalesOrderItemAssignSameItemAddOnMethodModel() {
    }
    
    // object used to input query data, to be used by methodHub
    public SalesOrderItemAssignSameItemAddOnMethod getMethod() {
        if (method == null) method = new SalesOrderItemAssignSameItemAddOnMethod();
        return method;
    }
    
    public Hub<SalesOrderItemAssignSameItemAddOnMethod> getHub() {
        if (hub == null) {
            hub = new Hub<SalesOrderItemAssignSameItemAddOnMethod>(SalesOrderItemAssignSameItemAddOnMethod.class);
            hub.add(getMethod());
            hub.setPos(0);
        }
        return hub;
    }
    public Hub<ItemAddOn> getItemAddOnHub() {
        if (hubItemAddOn != null) return hubItemAddOn;
        hubItemAddOn = new Hub<>(ItemAddOn.class);
        Hub<ItemAddOn> hub = ModelDelegate.getActiveItemAddOns();
        HubCopy<ItemAddOn> hc = new HubCopy<>(hub, hubItemAddOn, false);
        hubItemAddOn.setLinkHub(getHub(), SalesOrderItemAssignSameItemAddOnMethod.P_ItemAddOn); 
        return hubItemAddOn;
    }
    
    public ItemAddOnModel getItemAddOnModel() {
        if (modelItemAddOn != null) return modelItemAddOn;
        modelItemAddOn = new ItemAddOnModel(getItemAddOnHub());
        modelItemAddOn.setDisplayName("Item Add Ons");
        modelItemAddOn.setPluralDisplayName("Item Add Ons");
        modelItemAddOn.setAllowNew(false);
        modelItemAddOn.setAllowSave(true);
        modelItemAddOn.setAllowAdd(false);
        modelItemAddOn.setAllowRemove(false);
        modelItemAddOn.setAllowClear(true);
        modelItemAddOn.setAllowDelete(false);
        modelItemAddOn.setAllowSearch(true);
        modelItemAddOn.setAllowHubSearch(false);
        modelItemAddOn.setAllowGotoEdit(false);
        modelItemAddOn.setViewOnly(true);
        return modelItemAddOn;
    }
    
    public ItemAddOnSearchModel getItemAddOnSearchModel() {
        if (modelItemAddOnSearch != null) return modelItemAddOnSearch;
        modelItemAddOnSearch = new ItemAddOnSearchModel() {
            @Override
            public void performSearch() {
                getItemAddOnSearch().setExtraWhere("discontinuedDate = null");
                OAFilter filter = new ItemAddOnActiveFilter();
                getItemAddOnSearch().setExtraWhereFilter(filter);
                super.performSearch();
            }
        };
        return modelItemAddOnSearch;
    }
}

