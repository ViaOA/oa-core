// Generated by OABuilder
package com.cdi.model.oa.propertypath;
 
import java.io.Serializable;
import com.cdi.model.oa.*;
 
public class CustomerPPx implements PPxInterface, Serializable {
    private static final long serialVersionUID = 1L;
    public final String pp;  // propertyPath
     
    public CustomerPPx(String name) {
        this(null, name);
    }

    public CustomerPPx(PPxInterface parent, String name) {
        String s = null;
        if (parent != null) {
            s = parent.toString();
        }
        if (s == null) s = "";
        if (name != null && name.length() > 0) {
            if (s.length() > 0 && name.charAt(0) != ':') s += ".";
            s += name;
        }
        pp = s;
    }

    public ContactPPx contacts() {
        ContactPPx ppx = new ContactPPx(this, Customer.P_Contacts);
        return ppx;
    }

    public OrderPPx orders() {
        OrderPPx ppx = new OrderPPx(this, Customer.P_Orders);
        return ppx;
    }

    public RegionPPx region() {
        RegionPPx ppx = new RegionPPx(this, Customer.P_Region);
        return ppx;
    }

    public SalesCustomerPPx salesCustomers() {
        SalesCustomerPPx ppx = new SalesCustomerPPx(this, Customer.P_SalesCustomers);
        return ppx;
    }

    public TaxCodePPx taxCode() {
        TaxCodePPx ppx = new TaxCodePPx(this, Customer.P_TaxCode);
        return ppx;
    }

    public String id() {
        return pp + "." + Customer.P_Id;
    }

    public String customerNumber() {
        return pp + "." + Customer.P_CustomerNumber;
    }

    public String name() {
        return pp + "." + Customer.P_Name;
    }

    public String name2() {
        return pp + "." + Customer.P_Name2;
    }

    public String shortName() {
        return pp + "." + Customer.P_ShortName;
    }

    public String address() {
        return pp + "." + Customer.P_Address;
    }

    public String address2() {
        return pp + "." + Customer.P_Address2;
    }

    public String address3() {
        return pp + "." + Customer.P_Address3;
    }

    public String city() {
        return pp + "." + Customer.P_City;
    }

    public String state() {
        return pp + "." + Customer.P_State;
    }

    public String zip() {
        return pp + "." + Customer.P_Zip;
    }

    public String phone() {
        return pp + "." + Customer.P_Phone;
    }

    public String faxNumber() {
        return pp + "." + Customer.P_FaxNumber;
    }

    public String notes() {
        return pp + "." + Customer.P_Notes;
    }

    public String salesperson() {
        return pp + "." + Customer.P_Salesperson;
    }

    public String currentBalance() {
        return pp + "." + Customer.P_CurrentBalance;
    }

    public String mtdCosts() {
        return pp + "." + Customer.P_MtdCosts;
    }

    public String ytdCosts() {
        return pp + "." + Customer.P_YtdCosts;
    }

    public String priorYearCost() {
        return pp + "." + Customer.P_PriorYearCost;
    }

    public String taxExempt() {
        return pp + "." + Customer.P_TaxExempt;
    }

    public String termCustomerNumber() {
        return pp + "." + Customer.P_TermCustomerNumber;
    }

    public String qbListId() {
        return pp + "." + Customer.P_QbListId;
    }

    public String inactiveDate() {
        return pp + "." + Customer.P_InactiveDate;
    }

    public String cityStateZip() {
        return pp + "." + Customer.P_CityStateZip;
    }

    public CustomerPPx activeFilter() {
        CustomerPPx ppx = new CustomerPPx(this, ":active()");
        return ppx;
    }

    @Override
    public String toString() {
        return pp;
    }
    public String pp() {
        return pp;
    }
}
 
