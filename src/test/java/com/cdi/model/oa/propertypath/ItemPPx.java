// Generated by OABuilder
package com.cdi.model.oa.propertypath;
 
import java.io.Serializable;
import com.cdi.model.oa.*;
 
public class ItemPPx implements PPxInterface, Serializable {
    private static final long serialVersionUID = 1L;
    public final String pp;  // propertyPath
     
    public ItemPPx(String name) {
        this(null, name);
    }

    public ItemPPx(PPxInterface parent, String name) {
        String s = null;
        if (parent != null) {
            s = parent.toString();
        }
        if (s == null) s = "";
        if (name != null && name.length() > 0) {
            if (s.length() > 0 && name.charAt(0) != ':') s += ".";
            s += name;
        }
        pp = s;
    }

    public FileInfoPPx fileInfo() {
        FileInfoPPx ppx = new FileInfoPPx(this, Item.P_FileInfo);
        return ppx;
    }

    public ImageStorePPx imageStore() {
        ImageStorePPx ppx = new ImageStorePPx(this, Item.P_ImageStore);
        return ppx;
    }

    public ItemCategoryPPx itemCategory() {
        ItemCategoryPPx ppx = new ItemCategoryPPx(this, Item.P_ItemCategory);
        return ppx;
    }

    public ItemQuotePPx itemQuotes() {
        ItemQuotePPx ppx = new ItemQuotePPx(this, Item.P_ItemQuotes);
        return ppx;
    }

    public MoldPPx mold() {
        MoldPPx ppx = new MoldPPx(this, Item.P_Mold);
        return ppx;
    }

    public OrderItemPPx OpenOrderItems() {
        OrderItemPPx ppx = new OrderItemPPx(this, Item.P_OpenOrderItems);
        return ppx;
    }

    public OrderItemPPx orderItems() {
        OrderItemPPx ppx = new OrderItemPPx(this, Item.P_OrderItems);
        return ppx;
    }

    public ProductionAreaPPx productionArea() {
        ProductionAreaPPx ppx = new ProductionAreaPPx(this, Item.P_ProductionArea);
        return ppx;
    }

    public SalesOrderItemPPx salesOrderItems() {
        SalesOrderItemPPx ppx = new SalesOrderItemPPx(this, Item.P_SalesOrderItems);
        return ppx;
    }

    public WebItemPPx webItems() {
        WebItemPPx ppx = new WebItemPPx(this, Item.P_WebItems);
        return ppx;
    }

    public String id() {
        return pp + "." + Item.P_Id;
    }

    public String code() {
        return pp + "." + Item.P_Code;
    }

    public String name() {
        return pp + "." + Item.P_Name;
    }

    public String description() {
        return pp + "." + Item.P_Description;
    }

    public String image() {
        return pp + "." + Item.P_Image;
    }

    public String width() {
        return pp + "." + Item.P_Width;
    }

    public String height() {
        return pp + "." + Item.P_Height;
    }

    public String depth() {
        return pp + "." + Item.P_Depth;
    }

    public String weight() {
        return pp + "." + Item.P_Weight;
    }

    public String specialOnly() {
        return pp + "." + Item.P_SpecialOnly;
    }

    public String price() {
        return pp + "." + Item.P_Price;
    }

    public String discontinuedDate() {
        return pp + "." + Item.P_DiscontinuedDate;
    }

    public String termCode() {
        return pp + "." + Item.P_TermCode;
    }

    public String isProduced() {
        return pp + "." + Item.P_IsProduced;
    }

    public String qbListId() {
        return pp + "." + Item.P_QbListId;
    }

    public String lastChanged() {
        return pp + "." + Item.P_LastChanged;
    }

    public String codeName() {
        return pp + "." + Item.P_CodeName;
    }

    public ItemPPx activeFilter() {
        ItemPPx ppx = new ItemPPx(this, ":active()");
        return ppx;
    }

    @Override
    public String toString() {
        return pp;
    }
    public String pp() {
        return pp;
    }
}
 
