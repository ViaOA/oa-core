// Generated by OABuilder
package com.cdi.model.oa.propertypath;
 
import java.io.Serializable;
import com.cdi.model.oa.*;
 
public class OrderPPx implements PPxInterface, Serializable {
    private static final long serialVersionUID = 1L;
    public final String pp;  // propertyPath
     
    public OrderPPx(String name) {
        this(null, name);
    }

    public OrderPPx(PPxInterface parent, String name) {
        String s = null;
        if (parent != null) {
            s = parent.toString();
        }
        if (s == null) s = "";
        if (name != null && name.length() > 0) {
            if (s.length() > 0 && name.charAt(0) != ':') s += ".";
            s += name;
        }
        pp = s;
    }

    public ColorCodePPx colorCode() {
        ColorCodePPx ppx = new ColorCodePPx(this, Order.P_ColorCode);
        return ppx;
    }

    public CustomerPPx customer() {
        CustomerPPx ppx = new CustomerPPx(this, Order.P_Customer);
        return ppx;
    }

    public OrderContactPPx orderContacts() {
        OrderContactPPx ppx = new OrderContactPPx(this, Order.P_OrderContacts);
        return ppx;
    }

    public OrderItemPPx orderItems() {
        OrderItemPPx ppx = new OrderItemPPx(this, Order.P_OrderItems);
        return ppx;
    }

    public OrderNotePPx orderNotes() {
        OrderNotePPx ppx = new OrderNotePPx(this, Order.P_OrderNotes);
        return ppx;
    }

    public RegionPPx region() {
        RegionPPx ppx = new RegionPPx(this, Order.P_Region);
        return ppx;
    }

    public SalesOrderPPx salesOrder() {
        SalesOrderPPx ppx = new SalesOrderPPx(this, Order.P_SalesOrder);
        return ppx;
    }

    public ShipToPPx shipTo() {
        ShipToPPx ppx = new ShipToPPx(this, Order.P_ShipTo);
        return ppx;
    }

    public TexturePPx texture() {
        TexturePPx ppx = new TexturePPx(this, Order.P_Texture);
        return ppx;
    }

    public WorkOrderPPx workOrders() {
        WorkOrderPPx ppx = new WorkOrderPPx(this, Order.P_WorkOrders);
        return ppx;
    }

    public String id() {
        return pp + "." + Order.P_Id;
    }

    public String date() {
        return pp + "." + Order.P_Date;
    }

    public String salesOrderNumber() {
        return pp + "." + Order.P_SalesOrderNumber;
    }

    public String totalPrice() {
        return pp + "." + Order.P_TotalPrice;
    }

    public String releasedDate() {
        return pp + "." + Order.P_ReleasedDate;
    }

    public String custExpectedDate() {
        return pp + "." + Order.P_CustExpectedDate;
    }

    public String expectedShipDate() {
        return pp + "." + Order.P_ExpectedShipDate;
    }

    public String expectedProductionEndDate() {
        return pp + "." + Order.P_ExpectedProductionEndDate;
    }

    public String inspectByDate() {
        return pp + "." + Order.P_InspectByDate;
    }

    public String inspectedDate() {
        return pp + "." + Order.P_InspectedDate;
    }

    public String dateCompleted() {
        return pp + "." + Order.P_DateCompleted;
    }

    public String customerPickUp() {
        return pp + "." + Order.P_CustomerPickUp;
    }

    public String qbListId() {
        return pp + "." + Order.P_QbListId;
    }

    public String notes() {
        return pp + "." + Order.P_Notes;
    }

    public String deleteDate() {
        return pp + "." + Order.P_DeleteDate;
    }

    public String lastUpdate() {
        return pp + "." + Order.P_LastUpdate;
    }

    public String isOpen() {
        return pp + "." + Order.P_IsOpen;
    }

    public String calcMinimumDays() {
        return pp + "." + Order.P_CalcMinimumDays;
    }

    public String calcFlags() {
        return pp + "." + Order.P_CalcFlags;
    }

    public String calcTotalWeight() {
        return pp + "." + Order.P_CalcTotalWeight;
    }

    public String calcDeliveryCharge() {
        return pp + "." + Order.P_CalcDeliveryCharge;
    }

    public String isValidQuantity() {
        return pp + "." + Order.P_IsValidQuantity;
    }

    public String isValid() {
        return pp + "." + Order.P_IsValid;
    }

    public String calcPaymentStatus() {
        return pp + "." + Order.P_CalcPaymentStatus;
    }

    public String unshippedPrice() {
        return pp + "." + Order.P_UnshippedPrice;
    }

    public String calcScheduledEndDate() {
        return pp + "." + Order.P_CalcScheduledEndDate;
    }

    public String createWorkOrder() {
        return pp + ".createWorkOrder";
    }

    public String updateWorkOrders() {
        return pp + ".updateWorkOrders";
    }

    public OrderPPx openFilter() {
        OrderPPx ppx = new OrderPPx(this, ":open()");
        return ppx;
    }

    public OrderPPx invalidFilter() {
        OrderPPx ppx = new OrderPPx(this, ":invalid()");
        return ppx;
    }

    @Override
    public String toString() {
        return pp;
    }
    public String pp() {
        return pp;
    }
}
 
