// Generated by OABuilder
package com.cdi.model.search;

import java.util.logging.*;

import com.viaoa.object.*;
import com.viaoa.hub.*;
import com.viaoa.util.*;
import com.viaoa.util.filter.*;
import com.viaoa.ds.*;

import com.cdi.model.*;
import com.cdi.model.oa.*;
import com.cdi.model.oa.propertypath.*;
import com.cdi.model.oa.search.*;
import com.cdi.model.oa.filter.*;
import com.cdi.delegate.ModelDelegate;
import com.cdi.resource.Resource;

public class DeliveryTruckSearchModel {
    private static Logger LOG = Logger.getLogger(DeliveryTruckSearchModel.class.getName());
    
    protected Hub<DeliveryTruck> hub;  // search results
    protected Hub<DeliveryTruck> hubMultiSelect;
    protected Hub<DeliveryTruck> hubSearchFrom;  // hub (optional) to search from
    protected Hub<DeliveryTruckSearch> hubDeliveryTruckSearch;  // search data, size=1, AO
    // references used in search
    protected Hub<Truck> hubWOTruckTruck;
    protected Hub<WorkOrder> hubWODeliveriesWorkOrder;
    
    // finder used to find objects in a path
    protected OAFinder<?, DeliveryTruck> finder;
    
    // ObjectModels
    protected TruckModel modelWOTruckTruck;
    protected WorkOrderModel modelWODeliveriesWorkOrder;
    
    // SearchModels
    protected TruckSearchModel modelWOTruckTruckSearch;
    protected WorkOrderSearchModel modelWODeliveriesWorkOrderSearch;
    
    // object used for search data
    protected DeliveryTruckSearch searchDeliveryTruck;
    
    public DeliveryTruckSearchModel() {
    }
    
    public DeliveryTruckSearchModel(Hub<DeliveryTruck> hub) {
        this.hub = hub;
    }
    
    // hub used for search results
    public Hub<DeliveryTruck> getHub() {
        if (hub == null) {
            hub = new Hub<DeliveryTruck>(DeliveryTruck.class);
        }
        return hub;
    }
    
    // hub used to search within
    private HubListener hlSearchFromHub;
    public Hub<DeliveryTruck> getSearchFromHub() {
        return hubSearchFrom;
    }
    public void setSearchFromHub(Hub<DeliveryTruck> hub) {
        if (this.hlSearchFromHub != null) {
            hubSearchFrom.removeListener(hlSearchFromHub);
            hlSearchFromHub = null;
        }
    
        hubSearchFrom = hub;
        if (hubSearchFrom != null) {
            hlSearchFromHub = new HubListenerAdapter() {
                @Override
                public void onNewList(HubEvent e) {
                    DeliveryTruckSearchModel.this.getHub().clear();
                }
            };
            hubSearchFrom.addHubListener(hlSearchFromHub);
        }
    }
    public void close() {
        setSearchFromHub(null);
    }
    
    public Hub<DeliveryTruck> getMultiSelectHub() {
        if (hubMultiSelect == null) {
            hubMultiSelect = new Hub<>(DeliveryTruck.class);
        }
        return hubMultiSelect;
    }
    
    public OAFinder<?, DeliveryTruck> getFinder() {
        return finder;
    }
    public void setFinder(OAFinder<?, DeliveryTruck> finder) {
        this.finder = finder;
    }
    
    // object used to input query data, to be used by searchHub
    public DeliveryTruckSearch getDeliveryTruckSearch() {
        if (searchDeliveryTruck != null) return searchDeliveryTruck;
        searchDeliveryTruck = new DeliveryTruckSearch();
        return searchDeliveryTruck;
    }
    
    // hub for search object - used to bind with UI components for entering search data
    public Hub<DeliveryTruckSearch> getDeliveryTruckSearchHub() {
        if (hubDeliveryTruckSearch == null) {
            hubDeliveryTruckSearch = new Hub<DeliveryTruckSearch>(DeliveryTruckSearch.class);
            hubDeliveryTruckSearch.add(getDeliveryTruckSearch());
            hubDeliveryTruckSearch.setPos(0);
        }
        return hubDeliveryTruckSearch;
    }
    public Hub<Truck> getWOTruckTruckHub() {
        if (hubWOTruckTruck != null) return hubWOTruckTruck;
        hubWOTruckTruck = getDeliveryTruckSearchHub().getDetailHub(DeliveryTruckSearch.P_WOTruckTruck);
        return hubWOTruckTruck;
    }
    public Hub<WorkOrder> getWODeliveriesWorkOrderHub() {
        if (hubWODeliveriesWorkOrder != null) return hubWODeliveriesWorkOrder;
        hubWODeliveriesWorkOrder = getDeliveryTruckSearchHub().getDetailHub(DeliveryTruckSearch.P_WODeliveriesWorkOrder);
        return hubWODeliveriesWorkOrder;
    }
    
    public TruckModel getWOTruckTruckModel() {
        if (modelWOTruckTruck != null) return modelWOTruckTruck;
        modelWOTruckTruck = new TruckModel(getWOTruckTruckHub());
        modelWOTruckTruck.setDisplayName("Truck");
        modelWOTruckTruck.setPluralDisplayName("Trucks");
        modelWOTruckTruck.setAllowNew(false);
        modelWOTruckTruck.setAllowSave(true);
        modelWOTruckTruck.setAllowAdd(false);
        modelWOTruckTruck.setAllowRemove(false);
        modelWOTruckTruck.setAllowClear(true);
        modelWOTruckTruck.setAllowDelete(false);
        modelWOTruckTruck.setAllowSearch(true);
        modelWOTruckTruck.setAllowHubSearch(false);
        modelWOTruckTruck.setAllowGotoEdit(true);
        return modelWOTruckTruck;
    }
    public WorkOrderModel getWODeliveriesWorkOrderModel() {
        if (modelWODeliveriesWorkOrder != null) return modelWODeliveriesWorkOrder;
        modelWODeliveriesWorkOrder = new WorkOrderModel(getWODeliveriesWorkOrderHub());
        modelWODeliveriesWorkOrder.setDisplayName("Work Order");
        modelWODeliveriesWorkOrder.setPluralDisplayName("Work Orders");
        modelWODeliveriesWorkOrder.setAllowNew(false);
        modelWODeliveriesWorkOrder.setAllowSave(true);
        modelWODeliveriesWorkOrder.setAllowAdd(false);
        modelWODeliveriesWorkOrder.setAllowRemove(false);
        modelWODeliveriesWorkOrder.setAllowClear(true);
        modelWODeliveriesWorkOrder.setAllowDelete(false);
        modelWODeliveriesWorkOrder.setAllowSearch(true);
        modelWODeliveriesWorkOrder.setAllowHubSearch(false);
        modelWODeliveriesWorkOrder.setAllowGotoEdit(true);
        modelWODeliveriesWorkOrder.setViewOnly(true);
        return modelWODeliveriesWorkOrder;
    }
    
    public TruckSearchModel getWOTruckTruckSearchModel() {
        if (modelWOTruckTruckSearch == null) {
            modelWOTruckTruckSearch = new TruckSearchModel();
            searchDeliveryTruck.setWOTruckTruckSearch(modelWOTruckTruckSearch.getTruckSearch());
        }
        return modelWOTruckTruckSearch;
    }
    public WorkOrderSearchModel getWODeliveriesWorkOrderSearchModel() {
        if (modelWODeliveriesWorkOrderSearch == null) {
            modelWODeliveriesWorkOrderSearch = new WorkOrderSearchModel();
            searchDeliveryTruck.setWODeliveriesWorkOrderSearch(modelWODeliveriesWorkOrderSearch.getWorkOrderSearch());
        }
        return modelWODeliveriesWorkOrderSearch;
    }
    
    public void beforeInput() {
        // hook that is called before search input starts
    }
    
    // uses DeliveryTruckSearch to build query, and populate Hub 
    public void performSearch() {
        OASelect<DeliveryTruck> sel = getDeliveryTruckSearch().getSelect();
        sel.setSearchHub(getSearchFromHub());
        sel.setFinder(getFinder());
        getHub().select(sel);
    }
    
    // can to overwritten to know when a selection is made
    public void onSelect(DeliveryTruck deliveryTruck, Hub<DeliveryTruck> hub) {
    }
    // can to overwritten to know when a multi-select is made
    public void onSelect(Hub<DeliveryTruck> hub) {
    }
}

