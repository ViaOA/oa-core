// Generated by OABuilder

package com.corptostore.model;

import java.util.logging.*;
import com.viaoa.object.*;
import com.corptostore.delegate.ModelDelegate;
import com.corptostore.model.filter.*;
import com.corptostore.model.oa.*;
import com.corptostore.model.oa.filter.*;
import com.corptostore.model.oa.propertypath.*;
import com.corptostore.model.oa.search.*;
import com.corptostore.model.search.*;
import com.corptostore.resource.Resource;
import com.corptostore.model.ResendBatchRequestModel;
import com.corptostore.model.StoreInfoModel;
import com.corptostore.model.oa.ResendBatchRequest;
import com.corptostore.model.oa.StoreInfo;
import com.viaoa.annotation.*;
import com.viaoa.hub.*;
import com.viaoa.util.*;
import com.viaoa.filter.*;
import com.viaoa.datasource.*;

public class ResendBatchRequestModel extends OAObjectModel {
    private static Logger LOG = Logger.getLogger(ResendBatchRequestModel.class.getName());
    
    // Hubs
    protected Hub<ResendBatchRequest> hub;
    // selected resendBatchRequests
    protected Hub<ResendBatchRequest> hubMultiSelect;
    // detail hubs
    protected Hub<StoreInfo> hubStoreInfo;
    
    // ObjectModels
    protected StoreInfoModel modelStoreInfo;
    
    public ResendBatchRequestModel() {
        setDisplayName("Resend Batch Request");
        setPluralDisplayName("Resend Batch Requests");
    }
    
    public ResendBatchRequestModel(Hub<ResendBatchRequest> hubResendBatchRequest) {
        this();
        if (hubResendBatchRequest != null) HubDelegate.setObjectClass(hubResendBatchRequest, ResendBatchRequest.class);
        this.hub = hubResendBatchRequest;
    }
    public ResendBatchRequestModel(ResendBatchRequest resendBatchRequest) {
        this();
        getHub().add(resendBatchRequest);
        getHub().setPos(0);
    }
    
    public Hub<ResendBatchRequest> getOriginalHub() {
        return getHub();
    }
    
    public Hub<StoreInfo> getStoreInfoHub() {
        if (hubStoreInfo != null) return hubStoreInfo;
        // this is the owner, use detailHub
        hubStoreInfo = getHub().getDetailHub(ResendBatchRequest.P_StoreInfo);
        return hubStoreInfo;
    }
    public ResendBatchRequest getResendBatchRequest() {
        return getHub().getAO();
    }
    
    public Hub<ResendBatchRequest> getHub() {
        if (hub == null) {
            hub = new Hub<ResendBatchRequest>(ResendBatchRequest.class);
        }
        return hub;
    }
    
    public Hub<ResendBatchRequest> getMultiSelectHub() {
        if (hubMultiSelect == null) {
            hubMultiSelect = new Hub<ResendBatchRequest>(ResendBatchRequest.class);
        }
        return hubMultiSelect;
    }
    
    public StoreInfoModel getStoreInfoModel() {
        if (modelStoreInfo != null) return modelStoreInfo;
        modelStoreInfo = new StoreInfoModel(getStoreInfoHub());
        modelStoreInfo.setDisplayName("Store Info");
        modelStoreInfo.setPluralDisplayName("Store Infos");
        modelStoreInfo.setForJfc(getForJfc());
        modelStoreInfo.setAllowNew(false);
        modelStoreInfo.setAllowSave(true);
        modelStoreInfo.setAllowAdd(false);
        modelStoreInfo.setAllowRemove(false);
        modelStoreInfo.setAllowClear(false);
        modelStoreInfo.setAllowDelete(false);
        modelStoreInfo.setAllowSearch(false);
        modelStoreInfo.setAllowHubSearch(false);
        modelStoreInfo.setAllowGotoEdit(true);
        OALinkInfo li = HubDetailDelegate.getLinkInfoFromDetailToMaster(getOriginalHub());
        modelStoreInfo.setCreateUI(li == null || !ResendBatchRequest.P_StoreInfo.equalsIgnoreCase(li.getName()) );
        modelStoreInfo.setViewOnly(getViewOnly());
        // call ResendBatchRequest.storeInfoModelCallback(StoreInfoModel) to be able to customize this model
        OAObjectCallbackDelegate.onObjectCallbackModel(ResendBatchRequest.class, ResendBatchRequest.P_StoreInfo, modelStoreInfo);
    
        return modelStoreInfo;
    }
    
    public HubCopy<ResendBatchRequest> createHubCopy() {
        Hub<ResendBatchRequest> hubResendBatchRequestx = new Hub<>(ResendBatchRequest.class);
        HubCopy<ResendBatchRequest> hc = new HubCopy<>(getHub(), hubResendBatchRequestx, true);
        return hc;
    }
    public ResendBatchRequestModel createCopy() {
        ResendBatchRequestModel mod = new ResendBatchRequestModel(createHubCopy().getHub());
        return mod;
    }
}

