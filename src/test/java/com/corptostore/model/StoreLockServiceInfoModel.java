// Generated by OABuilder

package com.corptostore.model;

import java.util.logging.*;
import com.viaoa.object.*;
import com.corptostore.delegate.ModelDelegate;
import com.corptostore.model.filter.*;
import com.corptostore.model.oa.*;
import com.corptostore.model.oa.filter.*;
import com.corptostore.model.oa.propertypath.*;
import com.corptostore.model.oa.search.*;
import com.corptostore.model.search.*;
import com.corptostore.resource.Resource;
import com.corptostore.model.CorpToStoreModel;
import com.corptostore.model.StatusInfoModel;
import com.corptostore.model.StoreLockInfoModel;
import com.corptostore.model.StoreLockServiceInfoModel;
import com.corptostore.model.oa.CorpToStore;
import com.corptostore.model.oa.StatusInfo;
import com.corptostore.model.oa.StoreLockInfo;
import com.corptostore.model.oa.StoreLockServiceInfo;
import com.viaoa.annotation.*;
import com.viaoa.hub.*;
import com.viaoa.util.*;
import com.viaoa.filter.*;
import com.viaoa.datasource.*;

public class StoreLockServiceInfoModel extends OAObjectModel {
    private static Logger LOG = Logger.getLogger(StoreLockServiceInfoModel.class.getName());
    
    // Hubs
    protected Hub<StoreLockServiceInfo> hub;
    // selected storeLockServiceInfos
    protected Hub<StoreLockServiceInfo> hubMultiSelect;
    // detail hubs
    protected Hub<CorpToStore> hubCorpToStore;
    protected Hub<StatusInfo> hubStatusInfo;
    protected Hub<StoreLockInfo> hubStoreLockInfos;
    
    // ObjectModels
    protected CorpToStoreModel modelCorpToStore;
    protected StatusInfoModel modelStatusInfo;
    protected StoreLockInfoModel modelStoreLockInfos;
    
    public StoreLockServiceInfoModel() {
        setDisplayName("Store Lock Service Info");
        setPluralDisplayName("Store Lock Service Infos");
    }
    
    public StoreLockServiceInfoModel(Hub<StoreLockServiceInfo> hubStoreLockServiceInfo) {
        this();
        if (hubStoreLockServiceInfo != null) HubDelegate.setObjectClass(hubStoreLockServiceInfo, StoreLockServiceInfo.class);
        this.hub = hubStoreLockServiceInfo;
    }
    public StoreLockServiceInfoModel(StoreLockServiceInfo storeLockServiceInfo) {
        this();
        getHub().add(storeLockServiceInfo);
        getHub().setPos(0);
    }
    
    public Hub<StoreLockServiceInfo> getOriginalHub() {
        return getHub();
    }
    
    public Hub<CorpToStore> getCorpToStoreHub() {
        if (hubCorpToStore != null) return hubCorpToStore;
        // this is the owner, use detailHub
        hubCorpToStore = getHub().getDetailHub(StoreLockServiceInfo.P_CorpToStore);
        return hubCorpToStore;
    }
    public Hub<StatusInfo> getStatusInfoHub() {
        if (hubStatusInfo != null) return hubStatusInfo;
        hubStatusInfo = getHub().getDetailHub(StoreLockServiceInfo.P_StatusInfo);
        return hubStatusInfo;
    }
    public Hub<StoreLockInfo> getStoreLockInfos() {
        if (hubStoreLockInfos == null) {
            hubStoreLockInfos = getHub().getDetailHub(StoreLockServiceInfo.P_StoreLockInfos);
        }
        return hubStoreLockInfos;
    }
    public StoreLockServiceInfo getStoreLockServiceInfo() {
        return getHub().getAO();
    }
    
    public Hub<StoreLockServiceInfo> getHub() {
        if (hub == null) {
            hub = new Hub<StoreLockServiceInfo>(StoreLockServiceInfo.class);
        }
        return hub;
    }
    
    public Hub<StoreLockServiceInfo> getMultiSelectHub() {
        if (hubMultiSelect == null) {
            hubMultiSelect = new Hub<StoreLockServiceInfo>(StoreLockServiceInfo.class);
        }
        return hubMultiSelect;
    }
    
    public CorpToStoreModel getCorpToStoreModel() {
        if (modelCorpToStore != null) return modelCorpToStore;
        modelCorpToStore = new CorpToStoreModel(getCorpToStoreHub());
        modelCorpToStore.setDisplayName("Corp To Store");
        modelCorpToStore.setPluralDisplayName("Corp To Stores");
        modelCorpToStore.setForJfc(getForJfc());
        modelCorpToStore.setAllowNew(false);
        modelCorpToStore.setAllowSave(true);
        modelCorpToStore.setAllowAdd(false);
        modelCorpToStore.setAllowRemove(false);
        modelCorpToStore.setAllowClear(false);
        modelCorpToStore.setAllowDelete(false);
        modelCorpToStore.setAllowSearch(false);
        modelCorpToStore.setAllowHubSearch(false);
        modelCorpToStore.setAllowGotoEdit(true);
        OALinkInfo li = HubDetailDelegate.getLinkInfoFromDetailToMaster(getOriginalHub());
        modelCorpToStore.setCreateUI(li == null || !StoreLockServiceInfo.P_CorpToStore.equalsIgnoreCase(li.getName()) );
        modelCorpToStore.setViewOnly(getViewOnly());
        // call StoreLockServiceInfo.corpToStoreModelCallback(CorpToStoreModel) to be able to customize this model
        OAObjectCallbackDelegate.onObjectCallbackModel(StoreLockServiceInfo.class, StoreLockServiceInfo.P_CorpToStore, modelCorpToStore);
    
        return modelCorpToStore;
    }
    public StatusInfoModel getStatusInfoModel() {
        if (modelStatusInfo != null) return modelStatusInfo;
        modelStatusInfo = new StatusInfoModel(getStatusInfoHub());
        modelStatusInfo.setDisplayName("Status Info");
        modelStatusInfo.setPluralDisplayName("Status Infos");
        modelStatusInfo.setForJfc(getForJfc());
        modelStatusInfo.setAllowNew(false);
        modelStatusInfo.setAllowSave(true);
        modelStatusInfo.setAllowAdd(false);
        modelStatusInfo.setAllowRemove(false);
        modelStatusInfo.setAllowClear(false);
        modelStatusInfo.setAllowDelete(false);
        modelStatusInfo.setAllowSearch(false);
        modelStatusInfo.setAllowHubSearch(false);
        modelStatusInfo.setAllowGotoEdit(true);
        modelStatusInfo.setViewOnly(getViewOnly());
        // call StoreLockServiceInfo.statusInfoModelCallback(StatusInfoModel) to be able to customize this model
        OAObjectCallbackDelegate.onObjectCallbackModel(StoreLockServiceInfo.class, StoreLockServiceInfo.P_StatusInfo, modelStatusInfo);
    
        return modelStatusInfo;
    }
    public StoreLockInfoModel getStoreLockInfosModel() {
        if (modelStoreLockInfos != null) return modelStoreLockInfos;
        modelStoreLockInfos = new StoreLockInfoModel(getStoreLockInfos());
        modelStoreLockInfos.setDisplayName("Store Lock Info");
        modelStoreLockInfos.setPluralDisplayName("Store Lock Infos");
        if (HubDetailDelegate.getIsFromSameMasterHub(getOriginalHub(), getStoreLockInfos())) {
            modelStoreLockInfos.setCreateUI(false);
        }
        modelStoreLockInfos.setForJfc(getForJfc());
        modelStoreLockInfos.setAllowNew(false);
        modelStoreLockInfos.setAllowSave(true);
        modelStoreLockInfos.setAllowAdd(false);
        modelStoreLockInfos.setAllowMove(false);
        modelStoreLockInfos.setAllowRemove(false);
        modelStoreLockInfos.setAllowDelete(true);
        modelStoreLockInfos.setAllowRefresh(false);
        modelStoreLockInfos.setAllowSearch(false);
        modelStoreLockInfos.setAllowHubSearch(false);
        modelStoreLockInfos.setAllowGotoEdit(true);
        modelStoreLockInfos.setViewOnly(getViewOnly());
        modelStoreLockInfos.setAllowNew(false);
        modelStoreLockInfos.setAllowTableFilter(true);
        modelStoreLockInfos.setAllowTableSorting(true);
        modelStoreLockInfos.setAllowMultiSelect(false);
        modelStoreLockInfos.setAllowCopy(false);
        modelStoreLockInfos.setAllowCut(false);
        modelStoreLockInfos.setAllowPaste(false);
        // call StoreLockServiceInfo.storeLockInfosModelCallback(StoreLockInfoModel) to be able to customize this model
        OAObjectCallbackDelegate.onObjectCallbackModel(StoreLockServiceInfo.class, StoreLockServiceInfo.P_StoreLockInfos, modelStoreLockInfos);
    
        return modelStoreLockInfos;
    }
    
    public HubCopy<StoreLockServiceInfo> createHubCopy() {
        Hub<StoreLockServiceInfo> hubStoreLockServiceInfox = new Hub<>(StoreLockServiceInfo.class);
        HubCopy<StoreLockServiceInfo> hc = new HubCopy<>(getHub(), hubStoreLockServiceInfox, true);
        return hc;
    }
    public StoreLockServiceInfoModel createCopy() {
        StoreLockServiceInfoModel mod = new StoreLockServiceInfoModel(createHubCopy().getHub());
        return mod;
    }
}

