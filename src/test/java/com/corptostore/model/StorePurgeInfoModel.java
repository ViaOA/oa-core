// Generated by OABuilder

package com.corptostore.model;

import java.util.logging.*;
import com.viaoa.object.*;
import com.corptostore.delegate.ModelDelegate;
import com.corptostore.model.filter.*;
import com.corptostore.model.oa.*;
import com.corptostore.model.oa.filter.*;
import com.corptostore.model.oa.propertypath.*;
import com.corptostore.model.oa.search.*;
import com.corptostore.model.search.*;
import com.corptostore.resource.Resource;
import com.corptostore.model.PurgeWindowModel;
import com.corptostore.model.StoreInfoModel;
import com.corptostore.model.StorePurgeInfoModel;
import com.corptostore.model.oa.PurgeWindow;
import com.corptostore.model.oa.StoreInfo;
import com.corptostore.model.oa.StorePurgeInfo;
import com.viaoa.annotation.*;
import com.viaoa.hub.*;
import com.viaoa.util.*;
import com.viaoa.filter.*;
import com.viaoa.datasource.*;

public class StorePurgeInfoModel extends OAObjectModel {
    private static Logger LOG = Logger.getLogger(StorePurgeInfoModel.class.getName());
    
    // Hubs
    protected Hub<StorePurgeInfo> hub;
    // selected storePurgeInfos
    protected Hub<StorePurgeInfo> hubMultiSelect;
    // detail hubs
    protected Hub<PurgeWindow> hubPurgeWindow;
    protected Hub<StoreInfo> hubStoreInfo;
    
    // ObjectModels
    protected PurgeWindowModel modelPurgeWindow;
    protected StoreInfoModel modelStoreInfo;
    
    public StorePurgeInfoModel() {
        setDisplayName("Store Purge Info");
        setPluralDisplayName("Store Purge Infos");
    }
    
    public StorePurgeInfoModel(Hub<StorePurgeInfo> hubStorePurgeInfo) {
        this();
        if (hubStorePurgeInfo != null) HubDelegate.setObjectClass(hubStorePurgeInfo, StorePurgeInfo.class);
        this.hub = hubStorePurgeInfo;
    }
    public StorePurgeInfoModel(StorePurgeInfo storePurgeInfo) {
        this();
        getHub().add(storePurgeInfo);
        getHub().setPos(0);
    }
    
    public Hub<StorePurgeInfo> getOriginalHub() {
        return getHub();
    }
    
    public Hub<PurgeWindow> getPurgeWindowHub() {
        if (hubPurgeWindow != null) return hubPurgeWindow;
        hubPurgeWindow = getHub().getDetailHub(StorePurgeInfo.P_PurgeWindow);
        return hubPurgeWindow;
    }
    public Hub<StoreInfo> getStoreInfoHub() {
        if (hubStoreInfo != null) return hubStoreInfo;
        // this is the owner, use detailHub
        hubStoreInfo = getHub().getDetailHub(StorePurgeInfo.P_StoreInfo);
        return hubStoreInfo;
    }
    public StorePurgeInfo getStorePurgeInfo() {
        return getHub().getAO();
    }
    
    public Hub<StorePurgeInfo> getHub() {
        if (hub == null) {
            hub = new Hub<StorePurgeInfo>(StorePurgeInfo.class);
        }
        return hub;
    }
    
    public Hub<StorePurgeInfo> getMultiSelectHub() {
        if (hubMultiSelect == null) {
            hubMultiSelect = new Hub<StorePurgeInfo>(StorePurgeInfo.class);
        }
        return hubMultiSelect;
    }
    
    public PurgeWindowModel getPurgeWindowModel() {
        if (modelPurgeWindow != null) return modelPurgeWindow;
        modelPurgeWindow = new PurgeWindowModel(getPurgeWindowHub());
        modelPurgeWindow.setDisplayName("Purge Window");
        modelPurgeWindow.setPluralDisplayName("Purge Windows");
        modelPurgeWindow.setForJfc(getForJfc());
        modelPurgeWindow.setAllowNew(false);
        modelPurgeWindow.setAllowSave(true);
        modelPurgeWindow.setAllowAdd(false);
        modelPurgeWindow.setAllowRemove(false);
        modelPurgeWindow.setAllowClear(false);
        modelPurgeWindow.setAllowDelete(false);
        modelPurgeWindow.setAllowSearch(false);
        modelPurgeWindow.setAllowHubSearch(false);
        modelPurgeWindow.setAllowGotoEdit(true);
        modelPurgeWindow.setViewOnly(true);
        // call StorePurgeInfo.purgeWindowModelCallback(PurgeWindowModel) to be able to customize this model
        OAObjectCallbackDelegate.onObjectCallbackModel(StorePurgeInfo.class, StorePurgeInfo.P_PurgeWindow, modelPurgeWindow);
    
        return modelPurgeWindow;
    }
    public StoreInfoModel getStoreInfoModel() {
        if (modelStoreInfo != null) return modelStoreInfo;
        modelStoreInfo = new StoreInfoModel(getStoreInfoHub());
        modelStoreInfo.setDisplayName("Store Info");
        modelStoreInfo.setPluralDisplayName("Store Infos");
        modelStoreInfo.setForJfc(getForJfc());
        modelStoreInfo.setAllowNew(false);
        modelStoreInfo.setAllowSave(true);
        modelStoreInfo.setAllowAdd(false);
        modelStoreInfo.setAllowRemove(false);
        modelStoreInfo.setAllowClear(false);
        modelStoreInfo.setAllowDelete(false);
        modelStoreInfo.setAllowSearch(false);
        modelStoreInfo.setAllowHubSearch(false);
        modelStoreInfo.setAllowGotoEdit(true);
        OALinkInfo li = HubDetailDelegate.getLinkInfoFromDetailToMaster(getOriginalHub());
        modelStoreInfo.setCreateUI(li == null || !StorePurgeInfo.P_StoreInfo.equalsIgnoreCase(li.getName()) );
        modelStoreInfo.setViewOnly(getViewOnly());
        // call StorePurgeInfo.storeInfoModelCallback(StoreInfoModel) to be able to customize this model
        OAObjectCallbackDelegate.onObjectCallbackModel(StorePurgeInfo.class, StorePurgeInfo.P_StoreInfo, modelStoreInfo);
    
        return modelStoreInfo;
    }
    
    public HubCopy<StorePurgeInfo> createHubCopy() {
        Hub<StorePurgeInfo> hubStorePurgeInfox = new Hub<>(StorePurgeInfo.class);
        HubCopy<StorePurgeInfo> hc = new HubCopy<>(getHub(), hubStorePurgeInfox, true);
        return hc;
    }
    public StorePurgeInfoModel createCopy() {
        StorePurgeInfoModel mod = new StorePurgeInfoModel(createHubCopy().getHub());
        return mod;
    }
}

