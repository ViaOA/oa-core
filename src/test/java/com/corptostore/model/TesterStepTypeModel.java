// Generated by OABuilder

package com.corptostore.model;

import java.util.logging.*;
import com.viaoa.object.*;
import com.corptostore.delegate.ModelDelegate;
import com.corptostore.model.filter.*;
import com.corptostore.model.oa.*;
import com.corptostore.model.oa.filter.*;
import com.corptostore.model.oa.propertypath.*;
import com.corptostore.model.oa.search.*;
import com.corptostore.model.search.*;
import com.corptostore.resource.Resource;
import com.corptostore.model.TesterStepTypeModel;
import com.corptostore.model.oa.TesterStepType;
import com.viaoa.annotation.*;
import com.viaoa.hub.*;
import com.viaoa.util.*;
import com.viaoa.filter.*;
import com.viaoa.datasource.*;

public class TesterStepTypeModel extends OAObjectModel {
    private static Logger LOG = Logger.getLogger(TesterStepTypeModel.class.getName());
    
    // Hubs
    protected Hub<TesterStepType> hub;
    // selected testerStepTypes
    protected Hub<TesterStepType> hubMultiSelect;
    
    
    public TesterStepTypeModel() {
        setDisplayName("Tester Step Type");
        setPluralDisplayName("Tester Step Types");
    }
    
    public TesterStepTypeModel(Hub<TesterStepType> hubTesterStepType) {
        this();
        if (hubTesterStepType != null) HubDelegate.setObjectClass(hubTesterStepType, TesterStepType.class);
        this.hub = hubTesterStepType;
    }
    public TesterStepTypeModel(TesterStepType testerStepType) {
        this();
        getHub().add(testerStepType);
        getHub().setPos(0);
    }
    
    public Hub<TesterStepType> getOriginalHub() {
        return getHub();
    }
    
    public TesterStepType getTesterStepType() {
        return getHub().getAO();
    }
    
    public Hub<TesterStepType> getHub() {
        if (hub == null) {
            hub = new Hub<TesterStepType>(TesterStepType.class);
        }
        return hub;
    }
    
    public Hub<TesterStepType> getMultiSelectHub() {
        if (hubMultiSelect == null) {
            hubMultiSelect = new Hub<TesterStepType>(TesterStepType.class);
        }
        return hubMultiSelect;
    }
    
    public HubCopy<TesterStepType> createHubCopy() {
        Hub<TesterStepType> hubTesterStepTypex = new Hub<>(TesterStepType.class);
        HubCopy<TesterStepType> hc = new HubCopy<>(getHub(), hubTesterStepTypex, true);
        return hc;
    }
    public TesterStepTypeModel createCopy() {
        TesterStepTypeModel mod = new TesterStepTypeModel(createHubCopy().getHub());
        return mod;
    }
}

