// Generated by OABuilder
package com.corptostore.model.oa;
 
import java.util.*;
import java.util.logging.*;
import java.sql.*;
import com.viaoa.object.*;
import com.viaoa.hub.*;
import com.viaoa.scheduler.*;
import com.viaoa.util.*;
import com.corptostore.delegate.oa.*;
import com.corptostore.model.oa.filter.*;
import com.corptostore.model.oa.propertypath.*;
import com.corptostore.model.oa.ResendBatchRequest;
import com.corptostore.model.oa.StoreInfo;
import com.viaoa.annotation.*;
import com.viaoa.util.OADateTime;
 
@OAClass(
    lowerName = "resendBatchRequest",
    pluralName = "ResendBatchRequests",
    shortName = "rbr",
    displayName = "Resend Batch Request",
    useDataSource = false,
    displayProperty = "id"
)
public class ResendBatchRequest extends OAObject {
    private static final long serialVersionUID = 1L;
    private static Logger LOG = Logger.getLogger(ResendBatchRequest.class.getName());

    public static final String P_Id = "id";
    public static final String P_Created = "created";
    public static final String P_Session = "session";
    public static final String P_BeginSeq = "beginSeq";
    public static final String P_EndSeq = "endSeq";
     
     
    public static final String P_StoreInfo = "storeInfo";
     
    protected volatile int id;
    protected volatile OADateTime created;
    protected volatile OADateTime session;
    protected volatile int beginSeq;
    protected volatile int endSeq;
     
    // Links to other objects.
    protected volatile transient StoreInfo storeInfo;
     
    public ResendBatchRequest() {
        if (!isLoading()) setObjectDefaults();
    }
    @Override
    public void setObjectDefaults() {
        setCreated(new OADateTime());
    }
     
    public ResendBatchRequest(int id) {
        this();
        setId(id);
    }
     

    @OAProperty(isUnique = true, trackPrimitiveNull = false, displayLength = 6)
    @OAId
    @OAColumn(sqlType = java.sql.Types.INTEGER)
    public int getId() {
        return id;
    }
    public void setId(int newValue) {
        int old = id;
        fireBeforePropertyChange(P_Id, old, newValue);
        this.id = newValue;
        firePropertyChange(P_Id, old, this.id);
    }
    @OAProperty(defaultValue = "new OADateTime()", displayLength = 15, isProcessed = true)
    @OAColumn(sqlType = java.sql.Types.TIMESTAMP)
    public OADateTime getCreated() {
        return created;
    }
    public void setCreated(OADateTime newValue) {
        OADateTime old = created;
        fireBeforePropertyChange(P_Created, old, newValue);
        this.created = newValue;
        firePropertyChange(P_Created, old, this.created);
    }
    @OAProperty(displayLength = 15)
    @OAColumn(sqlType = java.sql.Types.TIMESTAMP)
    public OADateTime getSession() {
        return session;
    }
    public void setSession(OADateTime newValue) {
        OADateTime old = session;
        fireBeforePropertyChange(P_Session, old, newValue);
        this.session = newValue;
        firePropertyChange(P_Session, old, this.session);
    }
    @OAProperty(displayName = "Begin Seq", displayLength = 6, columnLength = 9)
    @OAColumn(name = "begin_seq", sqlType = java.sql.Types.INTEGER)
    public int getBeginSeq() {
        return beginSeq;
    }
    public void setBeginSeq(int newValue) {
        int old = beginSeq;
        fireBeforePropertyChange(P_BeginSeq, old, newValue);
        this.beginSeq = newValue;
        firePropertyChange(P_BeginSeq, old, this.beginSeq);
    }
    @OAProperty(displayName = "End Seq", displayLength = 6, columnLength = 7)
    @OAColumn(name = "end_seq", sqlType = java.sql.Types.INTEGER)
    public int getEndSeq() {
        return endSeq;
    }
    public void setEndSeq(int newValue) {
        int old = endSeq;
        fireBeforePropertyChange(P_EndSeq, old, newValue);
        this.endSeq = newValue;
        firePropertyChange(P_EndSeq, old, this.endSeq);
    }
    @OAOne(
        displayName = "Store Info", 
        reverseName = StoreInfo.P_ResendBatchRequests, 
        required = true, 
        allowCreateNew = false
    )
    @OAFkey(columns = {"store_info_id"})
    public StoreInfo getStoreInfo() {
        if (storeInfo == null) {
            storeInfo = (StoreInfo) getObject(P_StoreInfo);
        }
        return storeInfo;
    }
    public void setStoreInfo(StoreInfo newValue) {
        StoreInfo old = this.storeInfo;
        fireBeforePropertyChange(P_StoreInfo, old, newValue);
        this.storeInfo = newValue;
        firePropertyChange(P_StoreInfo, old, this.storeInfo);
    }
}
 
