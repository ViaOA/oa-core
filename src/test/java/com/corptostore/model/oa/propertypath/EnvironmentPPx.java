// Generated by OABuilder
package com.corptostore.model.oa.propertypath;
 
import java.io.Serializable;

import com.corptostore.model.oa.*;
import com.corptostore.model.oa.Environment;
import com.corptostore.model.oa.propertypath.CorpToStorePPx;
import com.corptostore.model.oa.propertypath.DashboardLinePPx;
import com.corptostore.model.oa.propertypath.EnvironmentPPx;
import com.corptostore.model.oa.propertypath.PPxInterface;
import com.corptostore.model.oa.propertypath.TesterPPx;
 
public class EnvironmentPPx implements PPxInterface, Serializable {
    private static final long serialVersionUID = 1L;
    public final String pp;  // propertyPath
     
    public EnvironmentPPx(String name) {
        this(null, name);
    }

    public EnvironmentPPx(PPxInterface parent, String name) {
        String s = null;
        if (parent != null) {
            s = parent.toString();
        }
        if (s == null) s = "";
        if (name != null && name.length() > 0) {
            if (s.length() > 0 && name.charAt(0) != ':') s += ".";
            s += name;
        }
        pp = s;
    }

    public CorpToStorePPx corpToStores() {
        CorpToStorePPx ppx = new CorpToStorePPx(this, Environment.P_CorpToStores);
        return ppx;
    }

    public DashboardLinePPx dashboardLines() {
        DashboardLinePPx ppx = new DashboardLinePPx(this, Environment.P_DashboardLines);
        return ppx;
    }

    public TesterPPx testers() {
        TesterPPx ppx = new TesterPPx(this, Environment.P_Testers);
        return ppx;
    }

    public String id() {
        return pp + "." + Environment.P_Id;
    }

    public String created() {
        return pp + "." + Environment.P_Created;
    }

    public String type() {
        return pp + "." + Environment.P_Type;
    }

    public String name() {
        return pp + "." + Environment.P_Name;
    }

    public String urlTemplate() {
        return pp + "." + Environment.P_UrlTemplate;
    }

    public String nodeCount() {
        return pp + "." + Environment.P_NodeCount;
    }

    public String color() {
        return pp + "." + Environment.P_Color;
    }

    public String enableDashboard() {
        return pp + "." + Environment.P_EnableDashboard;
    }

    public String isAllPaused() {
        return pp + "." + Environment.P_IsAllPaused;
    }

    public String isAllRunning() {
        return pp + "." + Environment.P_IsAllRunning;
    }

    public String updateCorpToStore() {
        return pp + ".updateCorpToStore";
    }

    public String pauseAll() {
        return pp + ".pauseAll";
    }

    public String continueAll() {
        return pp + ".continueAll";
    }

    public EnvironmentPPx nonProdFilter() {
        EnvironmentPPx ppx = new EnvironmentPPx(this, ":nonProd()");
        return ppx;
    }

    @Override
    public String toString() {
        return pp;
    }
    public String pp() {
        return pp;
    }
}
 
