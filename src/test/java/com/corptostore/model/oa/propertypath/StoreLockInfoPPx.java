// Generated by OABuilder
package com.corptostore.model.oa.propertypath;
 
import java.io.Serializable;

import com.corptostore.model.oa.*;
import com.corptostore.model.oa.StoreLockInfo;
import com.corptostore.model.oa.propertypath.PPxInterface;
import com.corptostore.model.oa.propertypath.StatusInfoPPx;
import com.corptostore.model.oa.propertypath.StoreInfoPPx;
import com.corptostore.model.oa.propertypath.StoreLockServiceInfoPPx;
import com.corptostore.model.oa.propertypath.ThreadInfoPPx;
 
public class StoreLockInfoPPx implements PPxInterface, Serializable {
    private static final long serialVersionUID = 1L;
    public final String pp;  // propertyPath
     
    public StoreLockInfoPPx(String name) {
        this(null, name);
    }

    public StoreLockInfoPPx(PPxInterface parent, String name) {
        String s = null;
        if (parent != null) {
            s = parent.toString();
        }
        if (s == null) s = "";
        if (name != null && name.length() > 0) {
            if (s.length() > 0 && name.charAt(0) != ':') s += ".";
            s += name;
        }
        pp = s;
    }

    public StatusInfoPPx statusInfo() {
        StatusInfoPPx ppx = new StatusInfoPPx(this, StoreLockInfo.P_StatusInfo);
        return ppx;
    }

    public StoreInfoPPx storeInfo() {
        StoreInfoPPx ppx = new StoreInfoPPx(this, StoreLockInfo.P_StoreInfo);
        return ppx;
    }

    public StoreLockServiceInfoPPx storeLockServiceInfo() {
        StoreLockServiceInfoPPx ppx = new StoreLockServiceInfoPPx(this, StoreLockInfo.P_StoreLockServiceInfo);
        return ppx;
    }

    public ThreadInfoPPx threadInfo() {
        ThreadInfoPPx ppx = new ThreadInfoPPx(this, StoreLockInfo.P_ThreadInfo);
        return ppx;
    }

    public String id() {
        return pp + "." + StoreLockInfo.P_Id;
    }

    public String created() {
        return pp + "." + StoreLockInfo.P_Created;
    }

    public String expire() {
        return pp + "." + StoreLockInfo.P_Expire;
    }

    public String used() {
        return pp + "." + StoreLockInfo.P_Used;
    }

    public String completed() {
        return pp + "." + StoreLockInfo.P_Completed;
    }

    public String autoExtendExpireCounter() {
        return pp + "." + StoreLockInfo.P_AutoExtendExpireCounter;
    }

    public String lastTimeoutReported() {
        return pp + "." + StoreLockInfo.P_LastTimeoutReported;
    }

    public String releaseLock() {
        return pp + ".releaseLock";
    }

    @Override
    public String toString() {
        return pp;
    }
    public String pp() {
        return pp;
    }
}
 
