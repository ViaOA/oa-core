// Generated by OABuilder
package com.corptostore.model.oa.propertypath;
 
import com.corptostore.model.oa.*;
import com.corptostore.model.oa.Store;
import com.corptostore.model.oa.propertypath.BatchPPx;
import com.corptostore.model.oa.propertypath.ReceivePPx;
import com.corptostore.model.oa.propertypath.SendPPx;
import com.corptostore.model.oa.propertypath.StoreInfoPPx;
import com.corptostore.model.oa.propertypath.StoreTransmitBatchPPx;
import com.corptostore.model.oa.propertypath.TesterStorePPx;
import com.corptostore.model.oa.propertypath.TransmitPPx;
 
public class StorePP {
    private static BatchPPx fromBatches;
    private static ReceivePPx receives;
    private static SendPPx sends;
    private static StoreInfoPPx storeInfos;
    private static StoreTransmitBatchPPx storeTransmitBatches;
    private static TesterStorePPx testerStores;
    private static BatchPPx toBatches;
    private static TransmitPPx transmits;
     

    public static BatchPPx fromBatches() {
        if (fromBatches == null) fromBatches = new BatchPPx(Store.P_FromBatches);
        return fromBatches;
    }

    public static ReceivePPx receives() {
        if (receives == null) receives = new ReceivePPx(Store.P_Receives);
        return receives;
    }

    public static SendPPx sends() {
        if (sends == null) sends = new SendPPx(Store.P_Sends);
        return sends;
    }

    public static StoreInfoPPx storeInfos() {
        if (storeInfos == null) storeInfos = new StoreInfoPPx(Store.P_StoreInfos);
        return storeInfos;
    }

    public static StoreTransmitBatchPPx storeTransmitBatches() {
        if (storeTransmitBatches == null) storeTransmitBatches = new StoreTransmitBatchPPx(Store.P_StoreTransmitBatches);
        return storeTransmitBatches;
    }

    public static TesterStorePPx testerStores() {
        if (testerStores == null) testerStores = new TesterStorePPx(Store.P_TesterStores);
        return testerStores;
    }

    public static BatchPPx toBatches() {
        if (toBatches == null) toBatches = new BatchPPx(Store.P_ToBatches);
        return toBatches;
    }

    public static TransmitPPx transmits() {
        if (transmits == null) transmits = new TransmitPPx(Store.P_Transmits);
        return transmits;
    }

    public static String storeNumber() {
        String s = Store.P_StoreNumber;
        return s;
    }

    public static String corpFromStoreLock() {
        String s = Store.P_CorpFromStoreLock;
        return s;
    }

    public static String corpToStoreLock() {
        String s = Store.P_CorpToStoreLock;
        return s;
    }

    public static String lastTransmitId() {
        String s = Store.P_LastTransmitId;
        return s;
    }

    public static String lastProcessedIfsSequenceNumber() {
        String s = Store.P_LastProcessedIfsSequenceNumber;
        return s;
    }

    public static String storeOnline() {
        String s = Store.P_StoreOnline;
        return s;
    }

    public static String active() {
        String s = Store.P_Active;
        return s;
    }

    public static String registered() {
        String s = Store.P_Registered;
        return s;
    }

    public static String pp() {
        return ""; // this
    }
}
 
