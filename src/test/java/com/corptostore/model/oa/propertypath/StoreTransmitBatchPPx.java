// Generated by OABuilder
package com.corptostore.model.oa.propertypath;
 
import java.io.Serializable;

import com.corptostore.model.oa.*;
import com.corptostore.model.oa.StoreTransmitBatch;
import com.corptostore.model.oa.propertypath.PPxInterface;
import com.corptostore.model.oa.propertypath.StoreBatchPPx;
import com.corptostore.model.oa.propertypath.StorePPx;
import com.corptostore.model.oa.propertypath.StoreTransmitInfoPPx;
import com.corptostore.model.oa.propertypath.TransmitBatchPPx;
 
public class StoreTransmitBatchPPx implements PPxInterface, Serializable {
    private static final long serialVersionUID = 1L;
    public final String pp;  // propertyPath
     
    public StoreTransmitBatchPPx(String name) {
        this(null, name);
    }

    public StoreTransmitBatchPPx(PPxInterface parent, String name) {
        String s = null;
        if (parent != null) {
            s = parent.toString();
        }
        if (s == null) s = "";
        if (name != null && name.length() > 0) {
            if (s.length() > 0 && name.charAt(0) != ':') s += ".";
            s += name;
        }
        pp = s;
    }

    public StorePPx store() {
        StorePPx ppx = new StorePPx(this, StoreTransmitBatch.P_Store);
        return ppx;
    }

    public StoreBatchPPx storeBatches() {
        StoreBatchPPx ppx = new StoreBatchPPx(this, StoreTransmitBatch.P_StoreBatches);
        return ppx;
    }

    public StoreTransmitInfoPPx storeTransmitInfos() {
        StoreTransmitInfoPPx ppx = new StoreTransmitInfoPPx(this, StoreTransmitBatch.P_StoreTransmitInfos);
        return ppx;
    }

    public TransmitBatchPPx transmitBatch() {
        TransmitBatchPPx ppx = new TransmitBatchPPx(this, StoreTransmitBatch.P_TransmitBatch);
        return ppx;
    }

    public String storeNumber() {
        return pp + "." + StoreTransmitBatch.P_StoreNumber;
    }

    public String transmitBatchDate() {
        return pp + "." + StoreTransmitBatch.P_TransmitBatchDate;
    }

    public String greenMessageAdded() {
        return pp + "." + StoreTransmitBatch.P_GreenMessageAdded;
    }

    public String batchProcessed() {
        return pp + "." + StoreTransmitBatch.P_BatchProcessed;
    }

    public String storeTransmitProcessed() {
        return pp + "." + StoreTransmitBatch.P_StoreTransmitProcessed;
    }

    public String storeTransmitPostProcessProcessed() {
        return pp + "." + StoreTransmitBatch.P_StoreTransmitPostProcessProcessed;
    }

    public String storeStatus() {
        return pp + "." + StoreTransmitBatch.P_StoreStatus;
    }

    public String getTotalSendCount() {
        return pp + ".getTotalSendCount";
    }

    @Override
    public String toString() {
        return pp;
    }
    public String pp() {
        return pp;
    }
}
 
