// Generated by OABuilder
package com.corptostore.model.oa.propertypath;
 
import java.io.Serializable;

import com.corptostore.model.oa.*;
import com.corptostore.model.oa.StoreTransmitInfo;
import com.corptostore.model.oa.propertypath.PPxInterface;
import com.corptostore.model.oa.propertypath.StoreInfoPPx;
import com.corptostore.model.oa.propertypath.StoreTransmitBatchPPx;
import com.corptostore.model.oa.propertypath.TesterStorePPx;
 
public class StoreTransmitInfoPPx implements PPxInterface, Serializable {
    private static final long serialVersionUID = 1L;
    public final String pp;  // propertyPath
     
    public StoreTransmitInfoPPx(String name) {
        this(null, name);
    }

    public StoreTransmitInfoPPx(PPxInterface parent, String name) {
        String s = null;
        if (parent != null) {
            s = parent.toString();
        }
        if (s == null) s = "";
        if (name != null && name.length() > 0) {
            if (s.length() > 0 && name.charAt(0) != ':') s += ".";
            s += name;
        }
        pp = s;
    }

    public TesterStorePPx calcTesterStore() {
        TesterStorePPx ppx = new TesterStorePPx(this, StoreTransmitInfo.P_CalcTesterStore);
        return ppx;
    }

    public StoreInfoPPx storeInfo() {
        StoreInfoPPx ppx = new StoreInfoPPx(this, StoreTransmitInfo.P_StoreInfo);
        return ppx;
    }

    public StoreTransmitBatchPPx storeTransmitBatch() {
        StoreTransmitBatchPPx ppx = new StoreTransmitBatchPPx(this, StoreTransmitInfo.P_StoreTransmitBatch);
        return ppx;
    }

    public String id() {
        return pp + "." + StoreTransmitInfo.P_Id;
    }

    public String created() {
        return pp + "." + StoreTransmitInfo.P_Created;
    }

    public String dtStart() {
        return pp + "." + StoreTransmitInfo.P_DtStart;
    }

    public String dtEnd() {
        return pp + "." + StoreTransmitInfo.P_DtEnd;
    }

    public String messageCount() {
        return pp + "." + StoreTransmitInfo.P_MessageCount;
    }

    public String batchCount() {
        return pp + "." + StoreTransmitInfo.P_BatchCount;
    }

    public String seconds() {
        return pp + "." + StoreTransmitInfo.P_Seconds;
    }

    @Override
    public String toString() {
        return pp;
    }
    public String pp() {
        return pp;
    }
}
 
