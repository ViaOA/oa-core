// Generated by OABuilder
package com.corptostore.model.oa.propertypath;
 
import com.corptostore.model.oa.*;
import com.corptostore.model.oa.Tester;
import com.corptostore.model.oa.propertypath.EnvironmentPPx;
import com.corptostore.model.oa.propertypath.TesterResultPPx;
import com.corptostore.model.oa.propertypath.TesterStepPPx;
import com.corptostore.model.oa.propertypath.TesterStorePPx;
import com.corptostore.model.oa.propertypath.TransmitBatchPPx;
 
public class TesterPP {
    private static TesterStepPPx calcNextTesterStep;
    private static EnvironmentPPx environment;
    private static TesterResultPPx testerResults;
    private static TesterStepPPx testerSteps;
    private static TesterStorePPx testerStores;
    private static TransmitBatchPPx transmitBatch;
     

    public static TesterStepPPx calcNextTesterStep() {
        if (calcNextTesterStep == null) calcNextTesterStep = new TesterStepPPx(Tester.P_CalcNextTesterStep);
        return calcNextTesterStep;
    }

    public static EnvironmentPPx environment() {
        if (environment == null) environment = new EnvironmentPPx(Tester.P_Environment);
        return environment;
    }

    public static TesterResultPPx testerResults() {
        if (testerResults == null) testerResults = new TesterResultPPx(Tester.P_TesterResults);
        return testerResults;
    }

    public static TesterStepPPx testerSteps() {
        if (testerSteps == null) testerSteps = new TesterStepPPx(Tester.P_TesterSteps);
        return testerSteps;
    }

    public static TesterStorePPx testerStores() {
        if (testerStores == null) testerStores = new TesterStorePPx(Tester.P_TesterStores);
        return testerStores;
    }

    public static TransmitBatchPPx transmitBatch() {
        if (transmitBatch == null) transmitBatch = new TransmitBatchPPx(Tester.P_TransmitBatch);
        return transmitBatch;
    }

    public static String id() {
        String s = Tester.P_Id;
        return s;
    }

    public static String created() {
        String s = Tester.P_Created;
        return s;
    }

    public static String numberOfStores() {
        String s = Tester.P_NumberOfStores;
        return s;
    }

    public static String allStoreMessages() {
        String s = Tester.P_AllStoreMessages;
        return s;
    }

    public static String averageMessagesPerStore() {
        String s = Tester.P_AverageMessagesPerStore;
        return s;
    }

    public static String transmitBatchDate() {
        String s = Tester.P_TransmitBatchDate;
        return s;
    }

    public static String wasEnvironmentPaused() {
        String s = Tester.P_WasEnvironmentPaused;
        return s;
    }

    public static String results() {
        String s = Tester.P_Results;
        return s;
    }

    public static String verifyReport() {
        String s = Tester.P_VerifyReport;
        return s;
    }

    public static String console() {
        String s = Tester.P_Console;
        return s;
    }

    public static String isTestDone() {
        String s = Tester.P_IsTestDone;
        return s;
    }

    public static String nextTesterStepMessage() {
        String s = Tester.P_NextTesterStepMessage;
        return s;
    }

    public static String refreshEnabled() {
        String s = Tester.P_RefreshEnabled;
        return s;
    }

    public static String next() {
        String s = "next";
        return s;
    }

    public static String cancel() {
        String s = "cancel";
        return s;
    }

    public static String refreshResults() {
        String s = "refreshResults";
        return s;
    }

    public static String pp() {
        return ""; // this
    }
}
 
