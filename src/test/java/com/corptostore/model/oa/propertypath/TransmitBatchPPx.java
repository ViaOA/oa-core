// Generated by OABuilder
package com.corptostore.model.oa.propertypath;
 
import java.io.Serializable;

import com.corptostore.model.oa.*;
import com.corptostore.model.oa.TransmitBatch;
import com.corptostore.model.oa.propertypath.PPxInterface;
import com.corptostore.model.oa.propertypath.StoreTransmitBatchPPx;
import com.corptostore.model.oa.propertypath.TesterPPx;
import com.corptostore.model.oa.propertypath.TransmitPPx;
 
public class TransmitBatchPPx implements PPxInterface, Serializable {
    private static final long serialVersionUID = 1L;
    public final String pp;  // propertyPath
     
    public TransmitBatchPPx(String name) {
        this(null, name);
    }

    public TransmitBatchPPx(PPxInterface parent, String name) {
        String s = null;
        if (parent != null) {
            s = parent.toString();
        }
        if (s == null) s = "";
        if (name != null && name.length() > 0) {
            if (s.length() > 0 && name.charAt(0) != ':') s += ".";
            s += name;
        }
        pp = s;
    }

    public StoreTransmitBatchPPx storeTransmitBatches() {
        StoreTransmitBatchPPx ppx = new StoreTransmitBatchPPx(this, TransmitBatch.P_StoreTransmitBatches);
        return ppx;
    }

    public TesterPPx tester() {
        TesterPPx ppx = new TesterPPx(this, TransmitBatch.P_Tester);
        return ppx;
    }

    public TransmitPPx transmits() {
        TransmitPPx ppx = new TransmitPPx(this, TransmitBatch.P_Transmits);
        return ppx;
    }

    public String transmitBatchDate() {
        return pp + "." + TransmitBatch.P_TransmitBatchDate;
    }

    public String lock() {
        return pp + "." + TransmitBatch.P_Lock;
    }

    public String dataPullCompleted() {
        return pp + "." + TransmitBatch.P_DataPullCompleted;
    }

    public String commBuildVerified() {
        return pp + "." + TransmitBatch.P_CommBuildVerified;
    }

    public String dataAreaVerified() {
        return pp + "." + TransmitBatch.P_DataAreaVerified;
    }

    public String storeInitializationCheck() {
        return pp + "." + TransmitBatch.P_StoreInitializationCheck;
    }

    public String storeMessagesBuilt() {
        return pp + "." + TransmitBatch.P_StoreMessagesBuilt;
    }

    public String storeMessagesProcessed() {
        return pp + "." + TransmitBatch.P_StoreMessagesProcessed;
    }

    public String lastHcomm1Offset() {
        return pp + "." + TransmitBatch.P_LastHcomm1Offset;
    }

    public String generateSampleData() {
        return pp + ".generateSampleData";
    }

    @Override
    public String toString() {
        return pp;
    }
    public String pp() {
        return pp;
    }
}
 
