// generated by OABuilder
package com.corptostore.model.pojo;

import java.time.LocalDateTime;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.corptostore.model.pojo.StatusInfo;
import com.corptostore.model.pojo.StoreInfo;
import com.corptostore.model.pojo.ThreadInfo;

public class StoreLockInfo implements java.io.Serializable {
	private static final long serialVersionUID = 1L;

	protected LocalDateTime created;
	protected LocalDateTime expire;
	protected LocalDateTime used;
	protected LocalDateTime completed;
	protected int autoExtendExpireCounter;
	protected boolean lastTimeoutReported;

	// References to other objects.
	// StatusInfo
	protected StatusInfo statusInfo;
	// StoreInfo
	// StoreInfo.Store
	protected Integer storeNumber; // key using Store.storeNumber
	protected StoreInfo storeInfo;
	// ThreadInfo
	protected int threadId; // import match using ThreadInfo.threadId
	protected ThreadInfo threadInfo;

	public StoreLockInfo() {
	}

	public LocalDateTime getCreated() {
		return created;
	}

	public void setCreated(LocalDateTime newValue) {
		this.created = newValue;
	}

	public LocalDateTime getExpire() {
		return expire;
	}

	public void setExpire(LocalDateTime newValue) {
		this.expire = newValue;
	}

	public LocalDateTime getUsed() {
		return used;
	}

	public void setUsed(LocalDateTime newValue) {
		this.used = newValue;
	}

	public LocalDateTime getCompleted() {
		return completed;
	}

	public void setCompleted(LocalDateTime newValue) {
		this.completed = newValue;
	}

	public int getAutoExtendExpireCounter() {
		return autoExtendExpireCounter;
	}

	public void setAutoExtendExpireCounter(int newValue) {
		this.autoExtendExpireCounter = newValue;
	}

	public boolean getLastTimeoutReported() {
		return lastTimeoutReported;
	}

	public void setLastTimeoutReported(boolean newValue) {
		this.lastTimeoutReported = newValue;
	}

	@JsonIgnore
	public StatusInfo getStatusInfo() {
		if (statusInfo == null) {
			statusInfo = new StatusInfo();
		}
		return statusInfo;
	}

	public void setStatusInfo(StatusInfo newValue) {
		this.statusInfo = newValue;
	}

	@JsonIgnore
	public StoreInfo getStoreInfo() {
		return storeInfo;
	}

	public void setStoreInfo(StoreInfo newValue) {
		this.storeInfo = newValue;
	}

	public Integer getStoreNumber() {
		if (this.storeInfo != null) {
			return this.storeInfo.getStoreNumber();
		}
		return this.storeNumber;
	}

	public void setStoreNumber(Integer newValue) { // key
		if (this.storeInfo != null && storeInfo.storeNumber != newValue) {
			setStoreInfo(null);
		}
		this.storeNumber = newValue;
	}

	@JsonIgnore
	public ThreadInfo getThreadInfo() {
		return threadInfo;
	}

	public void setThreadInfo(ThreadInfo newValue) {
		this.threadInfo = newValue;
	}

	public int getThreadId() { // import match
		if (this.threadInfo != null) {
			return this.threadInfo.getThreadId();
		}
		return this.threadId;
	}

	public void setThreadId(int newValue) {
		this.threadId = newValue;
		if (this.threadInfo != null && threadInfo.threadId != newValue) {
			setThreadInfo(null);
		}
	}
}
