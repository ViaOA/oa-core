// Generated by OABuilder

package com.messagedesigner.model;

import java.util.logging.*;
import com.viaoa.object.*;
import com.messagedesigner.delegate.ModelDelegate;
import com.messagedesigner.model.filter.*;
import com.messagedesigner.model.oa.*;
import com.messagedesigner.model.oa.filter.*;
import com.messagedesigner.model.oa.propertypath.*;
import com.messagedesigner.model.oa.search.*;
import com.messagedesigner.model.search.*;
import com.messagedesigner.resource.Resource;
import com.messagedesigner.model.JsonTypeModel;
import com.messagedesigner.model.oa.JsonType;
import com.viaoa.annotation.*;
import com.viaoa.hub.*;
import com.viaoa.util.*;
import com.viaoa.filter.*;
import com.viaoa.datasource.*;

public class JsonTypeModel extends OAObjectModel {
    private static Logger LOG = Logger.getLogger(JsonTypeModel.class.getName());
    
    // Hubs
    protected Hub<JsonType> hub;
    // selected jsonTypes
    protected Hub<JsonType> hubMultiSelect;
    
    
    public JsonTypeModel() {
        setDisplayName("Json Type");
        setPluralDisplayName("Json Types");
    }
    
    public JsonTypeModel(Hub<JsonType> hubJsonType) {
        this();
        if (hubJsonType != null) HubDelegate.setObjectClass(hubJsonType, JsonType.class);
        this.hub = hubJsonType;
    }
    public JsonTypeModel(JsonType jsonType) {
        this();
        getHub().add(jsonType);
        getHub().setPos(0);
    }
    
    public Hub<JsonType> getOriginalHub() {
        return getHub();
    }
    
    public JsonType getJsonType() {
        return getHub().getAO();
    }
    
    public Hub<JsonType> getHub() {
        if (hub == null) {
            hub = new Hub<JsonType>(JsonType.class);
        }
        return hub;
    }
    
    public Hub<JsonType> getMultiSelectHub() {
        if (hubMultiSelect == null) {
            hubMultiSelect = new Hub<JsonType>(JsonType.class);
        }
        return hubMultiSelect;
    }
    
    public HubCopy<JsonType> createHubCopy() {
        Hub<JsonType> hubJsonTypex = new Hub<>(JsonType.class);
        HubCopy<JsonType> hc = new HubCopy<>(getHub(), hubJsonTypex, true);
        return hc;
    }
    public JsonTypeModel createCopy() {
        JsonTypeModel mod = new JsonTypeModel(createHubCopy().getHub());
        return mod;
    }
}

