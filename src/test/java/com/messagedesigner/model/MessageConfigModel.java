// Generated by OABuilder

package com.messagedesigner.model;

import java.util.logging.*;
import com.viaoa.object.*;
import com.messagedesigner.delegate.ModelDelegate;
import com.messagedesigner.model.filter.*;
import com.messagedesigner.model.oa.*;
import com.messagedesigner.model.oa.filter.*;
import com.messagedesigner.model.oa.propertypath.*;
import com.messagedesigner.model.oa.search.*;
import com.messagedesigner.model.search.*;
import com.messagedesigner.resource.Resource;
import com.messagedesigner.model.MessageConfigModel;
import com.messagedesigner.model.oa.MessageConfig;
import com.viaoa.annotation.*;
import com.viaoa.hub.*;
import com.viaoa.util.*;
import com.viaoa.filter.*;
import com.viaoa.datasource.*;

public class MessageConfigModel extends OAObjectModel {
    private static Logger LOG = Logger.getLogger(MessageConfigModel.class.getName());
    
    // Hubs
    protected Hub<MessageConfig> hub;
    // selected messageConfigs
    protected Hub<MessageConfig> hubMultiSelect;
    
    
    public MessageConfigModel() {
        setDisplayName("Message Config");
        setPluralDisplayName("Message Configs");
    }
    
    public MessageConfigModel(Hub<MessageConfig> hubMessageConfig) {
        this();
        if (hubMessageConfig != null) HubDelegate.setObjectClass(hubMessageConfig, MessageConfig.class);
        this.hub = hubMessageConfig;
    }
    public MessageConfigModel(MessageConfig messageConfig) {
        this();
        getHub().add(messageConfig);
        getHub().setPos(0);
    }
    
    public Hub<MessageConfig> getOriginalHub() {
        return getHub();
    }
    
    public MessageConfig getMessageConfig() {
        return getHub().getAO();
    }
    
    public Hub<MessageConfig> getHub() {
        if (hub == null) {
            hub = new Hub<MessageConfig>(MessageConfig.class);
        }
        return hub;
    }
    
    public Hub<MessageConfig> getMultiSelectHub() {
        if (hubMultiSelect == null) {
            hubMultiSelect = new Hub<MessageConfig>(MessageConfig.class);
        }
        return hubMultiSelect;
    }
    
    public HubCopy<MessageConfig> createHubCopy() {
        Hub<MessageConfig> hubMessageConfigx = new Hub<>(MessageConfig.class);
        HubCopy<MessageConfig> hc = new HubCopy<>(getHub(), hubMessageConfigx, true);
        return hc;
    }
    public MessageConfigModel createCopy() {
        MessageConfigModel mod = new MessageConfigModel(createHubCopy().getHub());
        return mod;
    }
}

