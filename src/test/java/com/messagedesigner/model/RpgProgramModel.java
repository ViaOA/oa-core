// Generated by OABuilder

package com.messagedesigner.model;

import java.util.logging.*;
import com.viaoa.object.*;
import com.messagedesigner.delegate.ModelDelegate;
import com.messagedesigner.model.filter.*;
import com.messagedesigner.model.oa.*;
import com.messagedesigner.model.oa.filter.*;
import com.messagedesigner.model.oa.propertypath.*;
import com.messagedesigner.model.oa.search.*;
import com.messagedesigner.model.search.*;
import com.messagedesigner.resource.Resource;
import com.messagedesigner.model.MessageTypeRecordModel;
import com.messagedesigner.model.RpgProgramModel;
import com.messagedesigner.model.oa.MessageTypeRecord;
import com.messagedesigner.model.oa.RpgProgram;
import com.messagedesigner.model.search.MessageTypeRecordSearchModel;
import com.viaoa.annotation.*;
import com.viaoa.hub.*;
import com.viaoa.util.*;
import com.viaoa.filter.*;
import com.viaoa.datasource.*;

public class RpgProgramModel extends OAObjectModel {
    private static Logger LOG = Logger.getLogger(RpgProgramModel.class.getName());
    
    // Hubs
    protected Hub<RpgProgram> hub;
    // selected rpgPrograms
    protected Hub<RpgProgram> hubMultiSelect;
    // detail hubs
    protected Hub<MessageTypeRecord> hubMessageTypeRecords;
    
    // ObjectModels
    protected MessageTypeRecordModel modelMessageTypeRecords;
    
    // SearchModels used for references
    protected MessageTypeRecordSearchModel modelMessageTypeRecordsSearch;
    
    public RpgProgramModel() {
        setDisplayName("Rpg Program");
        setPluralDisplayName("Rpg Programs");
    }
    
    public RpgProgramModel(Hub<RpgProgram> hubRpgProgram) {
        this();
        if (hubRpgProgram != null) HubDelegate.setObjectClass(hubRpgProgram, RpgProgram.class);
        this.hub = hubRpgProgram;
    }
    public RpgProgramModel(RpgProgram rpgProgram) {
        this();
        getHub().add(rpgProgram);
        getHub().setPos(0);
    }
    
    public Hub<RpgProgram> getOriginalHub() {
        return getHub();
    }
    
    public Hub<MessageTypeRecord> getMessageTypeRecords() {
        if (hubMessageTypeRecords == null) {
            hubMessageTypeRecords = getHub().getDetailHub(RpgProgram.P_MessageTypeRecords);
        }
        return hubMessageTypeRecords;
    }
    public RpgProgram getRpgProgram() {
        return getHub().getAO();
    }
    
    public Hub<RpgProgram> getHub() {
        if (hub == null) {
            hub = new Hub<RpgProgram>(RpgProgram.class);
        }
        return hub;
    }
    
    public Hub<RpgProgram> getMultiSelectHub() {
        if (hubMultiSelect == null) {
            hubMultiSelect = new Hub<RpgProgram>(RpgProgram.class);
        }
        return hubMultiSelect;
    }
    
    public MessageTypeRecordModel getMessageTypeRecordsModel() {
        if (modelMessageTypeRecords != null) return modelMessageTypeRecords;
        modelMessageTypeRecords = new MessageTypeRecordModel(getMessageTypeRecords());
        modelMessageTypeRecords.setDisplayName("Message Type Record");
        modelMessageTypeRecords.setPluralDisplayName("Message Type Records");
        if (HubDetailDelegate.getIsFromSameMasterHub(getOriginalHub(), getMessageTypeRecords())) {
            modelMessageTypeRecords.setCreateUI(false);
        }
        modelMessageTypeRecords.setForJfc(getForJfc());
        modelMessageTypeRecords.setAllowNew(false);
        modelMessageTypeRecords.setAllowSave(true);
        modelMessageTypeRecords.setAllowAdd(true);
        modelMessageTypeRecords.setAllowMove(false);
        modelMessageTypeRecords.setAllowRemove(true);
        modelMessageTypeRecords.setAllowDelete(false);
        modelMessageTypeRecords.setAllowSearch(false);
        modelMessageTypeRecords.setAllowHubSearch(true);
        modelMessageTypeRecords.setAllowGotoEdit(true);
        modelMessageTypeRecords.setViewOnly(getViewOnly());
        modelMessageTypeRecords.setAllowNew(false);
        modelMessageTypeRecords.setAllowTableFilter(true);
        modelMessageTypeRecords.setAllowTableSorting(true);
        modelMessageTypeRecords.setAllowMultiSelect(false);
        modelMessageTypeRecords.setAllowCopy(false);
        modelMessageTypeRecords.setAllowCut(false);
        modelMessageTypeRecords.setAllowPaste(false);
        // call RpgProgram.messageTypeRecordsModelCallback(MessageTypeRecordModel) to be able to customize this model
        OAObjectCallbackDelegate.onObjectCallbackModel(RpgProgram.class, RpgProgram.P_MessageTypeRecords, modelMessageTypeRecords);
    
        return modelMessageTypeRecords;
    }
    
    public MessageTypeRecordSearchModel getMessageTypeRecordsSearchModel() {
        if (modelMessageTypeRecordsSearch != null) return modelMessageTypeRecordsSearch;
        modelMessageTypeRecordsSearch = new MessageTypeRecordSearchModel();
        return modelMessageTypeRecordsSearch;
    }
    
    public HubCopy<RpgProgram> createHubCopy() {
        Hub<RpgProgram> hubRpgProgramx = new Hub<>(RpgProgram.class);
        HubCopy<RpgProgram> hc = new HubCopy<>(getHub(), hubRpgProgramx, true);
        return hc;
    }
    public RpgProgramModel createCopy() {
        RpgProgramModel mod = new RpgProgramModel(createHubCopy().getHub());
        return mod;
    }
}

