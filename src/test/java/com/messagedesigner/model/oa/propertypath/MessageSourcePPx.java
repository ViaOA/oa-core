// Generated by OABuilder
package com.messagedesigner.model.oa.propertypath;
 
import java.io.Serializable;

import com.messagedesigner.model.oa.*;
import com.messagedesigner.model.oa.MessageSource;
import com.messagedesigner.model.oa.propertypath.MessageTypePPx;
import com.messagedesigner.model.oa.propertypath.MessageTypeRecordPPx;
import com.messagedesigner.model.oa.propertypath.PPxInterface;
 
public class MessageSourcePPx implements PPxInterface, Serializable {
    private static final long serialVersionUID = 1L;
    public final String pp;  // propertyPath
     
    public MessageSourcePPx(String name) {
        this(null, name);
    }

    public MessageSourcePPx(PPxInterface parent, String name) {
        String s = null;
        if (parent != null) {
            s = parent.toString();
        }
        if (s == null) s = "";
        if (name != null && name.length() > 0) {
            if (s.length() > 0 && name.charAt(0) != ':') s += ".";
            s += name;
        }
        pp = s;
    }

    public MessageTypeRecordPPx messageTypeRecords() {
        MessageTypeRecordPPx ppx = new MessageTypeRecordPPx(this, MessageSource.P_MessageTypeRecords);
        return ppx;
    }

    public MessageTypePPx messageTypes() {
        MessageTypePPx ppx = new MessageTypePPx(this, MessageSource.P_MessageTypes);
        return ppx;
    }

    public String id() {
        return pp + "." + MessageSource.P_Id;
    }

    public String created() {
        return pp + "." + MessageSource.P_Created;
    }

    public String source() {
        return pp + "." + MessageSource.P_Source;
    }

    public String console() {
        return pp + "." + MessageSource.P_Console;
    }

    public String rpgMessageDefinitionFile() {
        return pp + "." + MessageSource.P_RpgMessageDefinitionFile;
    }

    public String commonApiRootDirectory() {
        return pp + "." + MessageSource.P_CommonApiRootDirectory;
    }

    public String apiCode() {
        return pp + "." + MessageSource.P_ApiCode;
    }

    public String controllerCode() {
        return pp + "." + MessageSource.P_ControllerCode;
    }

    public String sortMessageTypes() {
        return pp + ".sortMessageTypes";
    }

    public String createOneMessageTypeForRecords() {
        return pp + ".createOneMessageTypeForRecords";
    }

    public String update() {
        return pp + ".update";
    }

    public String refreshApiCode() {
        return pp + ".refreshApiCode";
    }

    public String refreshControllerCode() {
        return pp + ".refreshControllerCode";
    }

    public String loadRpgMessageFile() {
        return pp + ".loadRpgMessageFile";
    }

    public String clearMessages() {
        return pp + ".clearMessages";
    }

    public String exportApiAndClasses() {
        return pp + ".exportApiAndClasses";
    }

    public String saveAsJsonResource() {
        return pp + ".saveAsJsonResource";
    }

    public String saveAsCSV() {
        return pp + ".saveAsCSV";
    }

    public String verifyAll() {
        return pp + ".verifyAll";
    }

    @Override
    public String toString() {
        return pp;
    }
    public String pp() {
        return pp;
    }
}
 
