// Generated by OABuilder
package com.messagedesigner.model.oa.tableconfig;

import java.util.logging.Logger;

import com.messagedesigner.model.oa.MessageSource;
import com.viaoa.annotation.OAClass;
import com.viaoa.object.OAObject;
import com.viaoa.util.OAString;

@OAClass(useDataSource = false, localOnly = true)
public class MessageSourceTableConfig extends OAObject {
	private static final long serialVersionUID = 1L;
	private static Logger LOG = Logger.getLogger(MessageSourceTableConfig.class.getName());
	public static final String P_Source = "Source";
	public static final String P_Source2 = "Source2";

	protected int source;
	protected int source2;

	public int getSource() {
		return source;
	}

	public void setSource(int newValue) {
		int old = source;
		fireBeforePropertyChange(P_Source, old, newValue);
		this.source = newValue;
		firePropertyChange(P_Source, old, this.source);
		firePropertyChange(P_Source + "String");
		firePropertyChange(P_Source + "Enum");
		if (isLoading()) {
			return;
		}
		if (source > source2) {
			setSource2(this.source);
		}
	}

	public int getSource2() {
		return source2;
	}

	public void setSource2(int newValue) {
		int old = source2;
		fireBeforePropertyChange(P_Source2, old, newValue);
		this.source2 = newValue;
		firePropertyChange(P_Source2, old, this.source2);
		firePropertyChange(P_Source + "String");
		firePropertyChange(P_Source + "Enum");
		if (isLoading()) {
			return;
		}
		if (source > source2) {
			setSource(this.source2);
		}
	}

	public String getSourceString() {
		MessageSource.Source source = getSourceEnum();
		if (source == null) {
			return null;
		}
		return source.name();
	}

	public void setSourceString(String val) {
		int x = -1;
		if (OAString.isNotEmpty(val)) {
			MessageSource.Source source = MessageSource.Source.valueOf(val);
			if (source != null) {
				x = source.ordinal();
			}
		}
		if (x < 0) {
			setNull(P_Source);
		} else {
			setSource(x);
		}
	}

	public MessageSource.Source getSourceEnum() {
		if (isNull(P_Source)) {
			return null;
		}
		final int val = getSource();
		if (val < 0 || val >= MessageSource.Source.values().length) {
			return null;
		}
		return MessageSource.Source.values()[val];
	}

	public void setSourceEnum(MessageSource.Source val) {
		if (val == null) {
			setNull(P_Source);
		} else {
			setSource(val.ordinal());
		}
	}

}
