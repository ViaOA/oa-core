// Generated by OABuilder
package com.oreillyauto.dev.tool.messagedesigner.model.filter;

import java.util.logging.*;

import com.viaoa.object.*;
import com.viaoa.annotation.*;
import com.viaoa.hub.*;
import com.viaoa.util.*;
import com.viaoa.datasource.*;

import com.oreillyauto.dev.tool.messagedesigner.model.*;
import com.oreillyauto.dev.tool.messagedesigner.model.oa.*;
import com.oreillyauto.dev.tool.messagedesigner.model.oa.propertypath.*;
import com.oreillyauto.dev.tool.messagedesigner.model.oa.filter.*;
import com.oreillyauto.dev.tool.messagedesigner.model.search.*;
import com.oreillyauto.dev.tool.messagedesigner.delegate.ModelDelegate;
import com.oreillyauto.dev.tool.messagedesigner.resource.Resource;

public class MessageTypeNotVerifiedFilterModel {
    private static Logger LOG = Logger.getLogger(MessageTypeNotVerifiedFilterModel.class.getName());
    
    // Hubs
    protected Hub<MessageTypeNotVerifiedFilter> hubFilter;
    
    // ObjectModels
    
    // object used for filter data
    protected MessageTypeNotVerifiedFilter filter;
    
    public MessageTypeNotVerifiedFilterModel(Hub<MessageType> hubMaster, Hub<MessageType> hub) {
        filter = new MessageTypeNotVerifiedFilter(hubMaster, hub);
    }
    public MessageTypeNotVerifiedFilterModel(Hub<MessageType> hub) {
        filter = new MessageTypeNotVerifiedFilter(hub);
    }
    
    // object used to input query data, to be used by filterHub
    public MessageTypeNotVerifiedFilter getFilter() {
        return filter;
    }
    
    // hub for filter UI object - used to bind with UI components for entering filter data
    public Hub<MessageTypeNotVerifiedFilter> getFilterHub() {
        if (hubFilter == null) {
            hubFilter = new Hub<MessageTypeNotVerifiedFilter>(MessageTypeNotVerifiedFilter.class);
            hubFilter.add(getFilter());
            hubFilter.setPos(0);
        }
        return hubFilter;
    }
    
    
    
    // get the Filtered hub
    public Hub<MessageType> getHub() {
        return getFilter().getHubFilter().getHub();
    }
}

