// Generated by OABuilder
package com.oreillyauto.dev.tool.messagedesigner.model.oa.propertypath;
 
import java.io.Serializable;
import com.oreillyauto.dev.tool.messagedesigner.model.oa.*;
 
public class MessageTypePPx implements PPxInterface, Serializable {
    private static final long serialVersionUID = 1L;
    public final String pp;  // propertyPath
     
    public MessageTypePPx(String name) {
        this(null, name);
    }

    public MessageTypePPx(PPxInterface parent, String name) {
        String s = null;
        if (parent != null) {
            s = parent.toString();
        }
        if (s == null) s = "";
        if (name != null && name.length() > 0) {
            if (s.length() > 0 && name.charAt(0) != ':') s += ".";
            s += name;
        }
        pp = s;
    }

    public MessageGroupPPx messageGroups() {
        MessageGroupPPx ppx = new MessageGroupPPx(this, MessageType.P_MessageGroups);
        return ppx;
    }

    public MessageRecordPPx messageRecords() {
        MessageRecordPPx ppx = new MessageRecordPPx(this, MessageType.P_MessageRecords);
        return ppx;
    }

    public MessagePPx messages() {
        MessagePPx ppx = new MessagePPx(this, MessageType.P_Messages);
        return ppx;
    }

    public MessageSourcePPx messageSource() {
        MessageSourcePPx ppx = new MessageSourcePPx(this, MessageType.P_MessageSource);
        return ppx;
    }

    public MessageTypeChangePPx messageTypeChanges() {
        MessageTypeChangePPx ppx = new MessageTypeChangePPx(this, MessageType.P_MessageTypeChanges);
        return ppx;
    }

    public String id() {
        return pp + "." + MessageType.P_Id;
    }

    public String created() {
        return pp + "." + MessageType.P_Created;
    }

    public String name() {
        return pp + "." + MessageType.P_Name;
    }

    public String description() {
        return pp + "." + MessageType.P_Description;
    }

    public String commonColumnCount() {
        return pp + "." + MessageType.P_CommonColumnCount;
    }

    public String note() {
        return pp + "." + MessageType.P_Note;
    }

    public String followUp() {
        return pp + "." + MessageType.P_FollowUp;
    }

    public String verified() {
        return pp + "." + MessageType.P_Verified;
    }

    public String seq() {
        return pp + "." + MessageType.P_Seq;
    }

    public String hasChanges() {
        return pp + "." + MessageType.P_HasChanges;
    }

    public String isValid() {
        return pp + "." + MessageType.P_IsValid;
    }

    public String display() {
        return pp + "." + MessageType.P_Display;
    }

    public String recordCodes() {
        return pp + "." + MessageType.P_RecordCodes;
    }

    public String pojoCode() {
        return pp + "." + MessageType.P_PojoCode;
    }

    public String calcApiName() {
        return pp + "." + MessageType.P_CalcApiName;
    }

    public String verifyCommand() {
        return pp + ".verifyCommand";
    }

    public MessageTypePPx changedFilter() {
        MessageTypePPx ppx = new MessageTypePPx(this, ":changed()");
        return ppx;
    }

    public MessageTypePPx notVerifiedFilter() {
        MessageTypePPx ppx = new MessageTypePPx(this, ":notVerified()");
        return ppx;
    }

    @Override
    public String toString() {
        return pp;
    }
    public String pp() {
        return pp;
    }
}
 
