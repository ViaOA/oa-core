// Generated by OABuilder
package com.oreillyauto.dev.tool.messagedesigner.model.oa.propertypath;
 
import java.io.Serializable;
import com.oreillyauto.dev.tool.messagedesigner.model.oa.*;
 
public class MessageTypeRecordPPx implements PPxInterface, Serializable {
    private static final long serialVersionUID = 1L;
    public final String pp;  // propertyPath
     
    public MessageTypeRecordPPx(String name) {
        this(null, name);
    }

    public MessageTypeRecordPPx(PPxInterface parent, String name) {
        String s = null;
        if (parent != null) {
            s = parent.toString();
        }
        if (s == null) s = "";
        if (name != null && name.length() > 0) {
            if (s.length() > 0 && name.charAt(0) != ':') s += ".";
            s += name;
        }
        pp = s;
    }

    public MessageRecordPPx messageRecords() {
        MessageRecordPPx ppx = new MessageRecordPPx(this, MessageTypeRecord.P_MessageRecords);
        return ppx;
    }

    public MessageSourcePPx messageSource() {
        MessageSourcePPx ppx = new MessageSourcePPx(this, MessageTypeRecord.P_MessageSource);
        return ppx;
    }

    public MessageTypeColumnPPx messageTypeColumns() {
        MessageTypeColumnPPx ppx = new MessageTypeColumnPPx(this, MessageTypeRecord.P_MessageTypeColumns);
        return ppx;
    }

    public RpgMessagePPx rpgMessages2() {
        RpgMessagePPx ppx = new RpgMessagePPx(this, MessageTypeRecord.P_RpgMessages2);
        return ppx;
    }

    public RpgProgramPPx rpgPrograms() {
        RpgProgramPPx ppx = new RpgProgramPPx(this, MessageTypeRecord.P_RpgPrograms);
        return ppx;
    }

    public MessageTypeColumnPPx subCodeColumn() {
        MessageTypeColumnPPx ppx = new MessageTypeColumnPPx(this, MessageTypeRecord.P_SubCodeColumn);
        return ppx;
    }

    public String id() {
        return pp + "." + MessageTypeRecord.P_Id;
    }

    public String created() {
        return pp + "." + MessageTypeRecord.P_Created;
    }

    public String code() {
        return pp + "." + MessageTypeRecord.P_Code;
    }

    public String subCode() {
        return pp + "." + MessageTypeRecord.P_SubCode;
    }

    public String name() {
        return pp + "." + MessageTypeRecord.P_Name;
    }

    public String description() {
        return pp + "." + MessageTypeRecord.P_Description;
    }

    public String repeatingCount() {
        return pp + "." + MessageTypeRecord.P_RepeatingCount;
    }

    public String statusType() {
        return pp + "." + MessageTypeRecord.P_StatusType;
    }

    public String notes() {
        return pp + "." + MessageTypeRecord.P_Notes;
    }

    public String disable() {
        return pp + "." + MessageTypeRecord.P_Disable;
    }

    public String seq() {
        return pp + "." + MessageTypeRecord.P_Seq;
    }

    public String layout() {
        return pp + "." + MessageTypeRecord.P_Layout;
    }

    public String layoutLoaded() {
        return pp + "." + MessageTypeRecord.P_LayoutLoaded;
    }

    public String followUp() {
        return pp + "." + MessageTypeRecord.P_FollowUp;
    }

    public String lock() {
        return pp + "." + MessageTypeRecord.P_Lock;
    }

    public String enableLoadLayout() {
        return pp + "." + MessageTypeRecord.P_EnableLoadLayout;
    }

    public String isDefined() {
        return pp + "." + MessageTypeRecord.P_IsDefined;
    }

    public String pojoCode() {
        return pp + "." + MessageTypeRecord.P_PojoCode;
    }

    public String display() {
        return pp + "." + MessageTypeRecord.P_Display;
    }

    public String fixLoadEnabled() {
        return pp + "." + MessageTypeRecord.P_FixLoadEnabled;
    }

    public String createFromLayoutEnabled() {
        return pp + "." + MessageTypeRecord.P_CreateFromLayoutEnabled;
    }

    public String update() {
        return pp + ".update";
    }

    public String fixLayout() {
        return pp + ".fixLayout";
    }

    public String createFromLayout() {
        return pp + ".createFromLayout";
    }

    public String unlock() {
        return pp + ".unlock";
    }

    @Override
    public String toString() {
        return pp;
    }
    public String pp() {
        return pp;
    }
}
 
