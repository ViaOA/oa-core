// Generated by OABuilder
package com.oreillyauto.dev.tool.messagedesigner.model.oa.propertypath;
 
import java.io.Serializable;
import com.oreillyauto.dev.tool.messagedesigner.model.oa.*;
 
public class RpgTypePPx implements PPxInterface, Serializable {
    private static final long serialVersionUID = 1L;
    public final String pp;  // propertyPath
     
    public RpgTypePPx(String name) {
        this(null, name);
    }

    public RpgTypePPx(PPxInterface parent, String name) {
        String s = null;
        if (parent != null) {
            s = parent.toString();
        }
        if (s == null) s = "";
        if (name != null && name.length() > 0) {
            if (s.length() > 0 && name.charAt(0) != ':') s += ".";
            s += name;
        }
        pp = s;
    }

    public JsonTypePPx jsonType() {
        JsonTypePPx ppx = new JsonTypePPx(this, RpgType.P_JsonType);
        return ppx;
    }

    public MessageTypeColumnPPx messageTypeColumns() {
        MessageTypeColumnPPx ppx = new MessageTypeColumnPPx(this, RpgType.P_MessageTypeColumns);
        return ppx;
    }

    public String id() {
        return pp + "." + RpgType.P_Id;
    }

    public String created() {
        return pp + "." + RpgType.P_Created;
    }

    public String name() {
        return pp + "." + RpgType.P_Name;
    }

    public String encodeType() {
        return pp + "." + RpgType.P_EncodeType;
    }

    public String defaultSize() {
        return pp + "." + RpgType.P_DefaultSize;
    }

    public String defaultFormat() {
        return pp + "." + RpgType.P_DefaultFormat;
    }

    public String nullValueType() {
        return pp + "." + RpgType.P_NullValueType;
    }

    public String note() {
        return pp + "." + RpgType.P_Note;
    }

    public String samples() {
        return pp + "." + RpgType.P_Samples;
    }

    public String seq() {
        return pp + "." + RpgType.P_Seq;
    }

    @Override
    public String toString() {
        return pp;
    }
    public String pp() {
        return pp;
    }
}
 
