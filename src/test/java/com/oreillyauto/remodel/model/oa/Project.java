// Generated by OABuilder
package com.oreillyauto.remodel.model.oa;
 
import java.util.List;
import java.util.logging.*;
import java.sql.*;
import javax.xml.bind.annotation.*;
import com.viaoa.object.*;
import com.viaoa.hub.*;
import com.viaoa.scheduler.*;
import com.viaoa.util.*;
import com.viaoa.annotation.*;
import com.viaoa.util.OADateTime;
import com.oreillyauto.remodel.delegate.oa.*;
import com.oreillyauto.remodel.model.oa.filter.*;
import com.oreillyauto.remodel.model.oa.propertypath.*;
 
@OAClass(
    lowerName = "project",
    pluralName = "Projects",
    shortName = "prj",
    displayName = "Project",
    isLookup = true,
    isPreSelect = true,
    displayProperty = "name",
    sortProperty = "seq"
)
@OATable(
)
@XmlRootElement(name = "project")
@XmlType(factoryMethod = "jaxbCreate")
@XmlAccessorType(XmlAccessType.NONE)
public class Project extends OAObject {
    private static final long serialVersionUID = 1L;
    private static Logger LOG = Logger.getLogger(Project.class.getName());

    public static final String PROPERTY_Id = "Id";
    public static final String P_Id = "Id";
    public static final String PROPERTY_Created = "Created";
    public static final String P_Created = "Created";
    public static final String PROPERTY_Name = "Name";
    public static final String P_Name = "Name";
    public static final String PROPERTY_Seq = "Seq";
    public static final String P_Seq = "Seq";
    public static final String PROPERTY_CodeDirectory = "CodeDirectory";
    public static final String P_CodeDirectory = "CodeDirectory";
     
     
    public static final String PROPERTY_Databases = "Databases";
    public static final String P_Databases = "Databases";
    public static final String PROPERTY_Repositories = "Repositories";
    public static final String P_Repositories = "Repositories";
     
    protected volatile int id;
    protected volatile OADateTime created;
    protected volatile String name;
    protected volatile int seq;
    protected volatile String codeDirectory;
     
    // Links to other objects.
    protected transient Hub<Database> hubDatabases;
    protected transient Hub<Repository> hubRepositories;
     
    public Project() {
        if (!isLoading()) {
            setCreated(new OADateTime());
        }
    }
     
    public Project(int id) {
        this();
        setId(id);
    }
     

    @XmlAttribute(name="oaSingleId")
    public Integer getJaxbGuid() {
        return super.getJaxbGuid();
    }

    @OAProperty(isUnique = true, trackPrimitiveNull = false, displayLength = 6)
    @OAId()
    @XmlTransient
    @OAColumn(sqlType = java.sql.Types.INTEGER)
    public int getId() {
        return id;
    }
    public void setId(int newValue) {
        int old = id;
        fireBeforePropertyChange(P_Id, old, newValue);
        this.id = newValue;
        firePropertyChange(P_Id, old, this.id);
    }
    @XmlID
    @XmlAttribute(name="id")
    public String getJaxbId() {
        // note: jaxb spec requires id to be a string
        if (!getJaxbShouldInclude(P_Id)) return null;
        return ""+id;
    }
    public void setJaxbId(String id) {
        if (getJaxbAllowPropertyChange(P_Id, this.id, id)) {
            setId((int) OAConv.convert(int.class, id));
        }
    }

    @OAProperty(defaultValue = "new OADateTime()", displayLength = 15, isProcessed = true)
    @OAColumn(sqlType = java.sql.Types.TIMESTAMP)
    public OADateTime getCreated() {
        return created;
    }
    public void setCreated(OADateTime newValue) {
        OADateTime old = created;
        fireBeforePropertyChange(P_Created, old, newValue);
        this.created = newValue;
        firePropertyChange(P_Created, old, this.created);
    }
    @XmlElement(name="created", nillable=true)
    public OADateTime getJaxbCreated() {
        if (!getJaxbShouldInclude(P_Created)) return null;
        return getCreated();
    }
    public void setJaxbCreated(OADateTime newValue) {
        if (getJaxbAllowPropertyChange(P_Created, this.created, newValue)) {
            setCreated(newValue);
        }
    }

    @OAProperty(maxLength = 35, displayLength = 20)
    @OAColumn(maxLength = 35)
    public String getName() {
        return name;
    }
    public void setName(String newValue) {
        String old = name;
        fireBeforePropertyChange(P_Name, old, newValue);
        this.name = newValue;
        firePropertyChange(P_Name, old, this.name);
    }
    @XmlElement(name="name", nillable=true)
    public String getJaxbName() {
        if (!getJaxbShouldInclude(P_Name)) return null;
        return getName();
    }
    public void setJaxbName(String newValue) {
        if (getJaxbAllowPropertyChange(P_Name, this.name, newValue)) {
            setName(newValue);
        }
    }

    @OAProperty(displayLength = 6, isAutoSeq = true)
    @OAColumn(sqlType = java.sql.Types.INTEGER)
    public int getSeq() {
        return seq;
    }
    public void setSeq(int newValue) {
        int old = seq;
        fireBeforePropertyChange(P_Seq, old, newValue);
        this.seq = newValue;
        firePropertyChange(P_Seq, old, this.seq);
    }
    @XmlElement(name="seq")
    public Integer getJaxbSeq() {
        if (!getJaxbShouldInclude(P_Seq)) return null;
        return getSeq();
    }
    public void setJaxbSeq(Integer newValue) {
        if (getJaxbAllowPropertyChange(P_Seq, this.seq, newValue)) {
            setSeq(newValue);
        }
    }

    @OAProperty(displayName = "Code Directory", maxLength = 250, displayLength = 20)
    @OAColumn(maxLength = 250)
    public String getCodeDirectory() {
        return codeDirectory;
    }
    public void setCodeDirectory(String newValue) {
        String old = codeDirectory;
        fireBeforePropertyChange(P_CodeDirectory, old, newValue);
        this.codeDirectory = newValue;
        firePropertyChange(P_CodeDirectory, old, this.codeDirectory);
    }
    @XmlElement(name="codeDirectory", nillable=true)
    public String getJaxbCodeDirectory() {
        if (!getJaxbShouldInclude(P_CodeDirectory)) return null;
        return getCodeDirectory();
    }
    public void setJaxbCodeDirectory(String newValue) {
        if (getJaxbAllowPropertyChange(P_CodeDirectory, this.codeDirectory, newValue)) {
            setCodeDirectory(newValue);
        }
    }

    @OAMany(
        toClass = Database.class, 
        reverseName = Database.P_Projects
    )
    @OALinkTable(name = "ProjectDatabase", indexName = "DatabaseProject", columns = {"ProjectId"})
    @XmlTransient
    public Hub<Database> getDatabases() {
        if (hubDatabases == null) {
            hubDatabases = (Hub<Database>) getHub(P_Databases);
        }
        return hubDatabases;
    }
    @XmlElementWrapper(name="databases")
    @XmlElement(name="database", type=Database.class)
    protected List<Database> getJaxbDatabases() {
        return getJaxbHub(P_Databases);
    }
    @XmlElementWrapper(name="refDatabases")
    @XmlElement(name="database", type=Database.class)
    @XmlIDREF
    protected List<Database> getJaxbRefDatabases() {
        return getJaxbRefHub(P_Databases); 
    }
    protected void setJaxbRefDatabases(List<Database> lst) {
        // no-op, since jaxb sends lst=hubDatabases 
    }
     
    @OAMany(
        toClass = Repository.class, 
        owner = true, 
        reverseName = Repository.P_Project, 
        cascadeSave = true, 
        cascadeDelete = true, 
        seqProperty = Repository.P_Seq, 
        sortProperty = Repository.P_Seq
    )
    @XmlTransient
    public Hub<Repository> getRepositories() {
        if (hubRepositories == null) {
            hubRepositories = (Hub<Repository>) getHub(P_Repositories);
        }
        return hubRepositories;
    }
    @XmlElementWrapper(name="repositories")
    @XmlElement(name="repository", type=Repository.class)
    protected List<Repository> getJaxbRepositories() {
        return getJaxbHub(P_Repositories);
    }
    @XmlElementWrapper(name="refRepositories")
    @XmlElement(name="repository", type=Repository.class)
    @XmlIDREF
    protected List<Repository> getJaxbRefRepositories() {
        return getJaxbRefHub(P_Repositories); 
    }
    protected void setJaxbRefRepositories(List<Repository> lst) {
        // no-op, since jaxb sends lst=hubRepositories 
    }
     
    public void load(ResultSet rs, int id) throws SQLException {
        this.id = id;
        java.sql.Timestamp timestamp;
        timestamp = rs.getTimestamp(2);
        if (timestamp != null) this.created = new OADateTime(timestamp);
        this.name = rs.getString(3);
        this.seq = (int) rs.getInt(4);
        if (rs.wasNull()) {
            OAObjectInfoDelegate.setPrimitiveNull(this, Project.P_Seq, true);
        }
        this.codeDirectory = rs.getString(5);
        if (rs.getMetaData().getColumnCount() != 5) {
            throw new SQLException("invalid number of columns for load method");
        }

        this.changedFlag = false;
        this.newFlag = false;
    }
    public static Project jaxbCreate() {
        Project project = (Project) OAObject.jaxbCreateInstance(Project.class);
        if (project == null) project = new Project();
        return project;
    }
}
 
