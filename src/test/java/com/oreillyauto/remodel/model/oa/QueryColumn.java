// Generated by OABuilder
package com.oreillyauto.remodel.model.oa;
 
import java.util.logging.*;
import java.sql.*;
import javax.xml.bind.annotation.*;
import com.viaoa.object.*;
import com.viaoa.hub.*;
import com.viaoa.scheduler.*;
import com.viaoa.util.*;
import com.viaoa.annotation.*;
import com.viaoa.util.OADateTime;
import com.oreillyauto.remodel.delegate.oa.*;
import com.oreillyauto.remodel.model.oa.filter.*;
import com.oreillyauto.remodel.model.oa.propertypath.*;
 
@OAClass(
    lowerName = "queryColumn",
    pluralName = "QueryColumns",
    shortName = "qrc",
    displayName = "Query Column",
    displayProperty = "column"
)
@OATable(
    indexes = {
        @OAIndex(name = "QueryColumnColumn", fkey = true, columns = { @OAIndexColumn(name = "ColumnId") }), 
        @OAIndex(name = "QueryColumnJsonColumn", fkey = true, columns = { @OAIndexColumn(name = "JsonColumnId") }), 
        @OAIndex(name = "QueryColumnQueryTable", fkey = true, columns = { @OAIndexColumn(name = "QueryTableId") })
    }
)
@XmlRootElement(name = "queryColumn")
@XmlType(factoryMethod = "jaxbCreate")
@XmlAccessorType(XmlAccessType.NONE)
public class QueryColumn extends OAObject {
    private static final long serialVersionUID = 1L;
    private static Logger LOG = Logger.getLogger(QueryColumn.class.getName());

    public static final String PROPERTY_Id = "Id";
    public static final String P_Id = "Id";
    public static final String PROPERTY_Created = "Created";
    public static final String P_Created = "Created";
    public static final String PROPERTY_Name = "Name";
    public static final String P_Name = "Name";
    public static final String PROPERTY_Seq = "Seq";
    public static final String P_Seq = "Seq";
     
     
    public static final String PROPERTY_Column = "Column";
    public static final String P_Column = "Column";
    public static final String PROPERTY_JsonColumn = "JsonColumn";
    public static final String P_JsonColumn = "JsonColumn";
    public static final String PROPERTY_QueryTable = "QueryTable";
    public static final String P_QueryTable = "QueryTable";
     
    protected volatile int id;
    protected volatile OADateTime created;
    protected volatile String name;
    protected volatile int seq;
     
    // Links to other objects.
    protected volatile transient Column column;
    protected volatile transient JsonColumn jsonColumn;
    protected volatile transient QueryTable queryTable;
     
    public QueryColumn() {
        if (!isLoading()) {
            setCreated(new OADateTime());
        }
    }
     
    public QueryColumn(int id) {
        this();
        setId(id);
    }
     

    @XmlAttribute(name="oaSingleId")
    public Integer getJaxbGuid() {
        return super.getJaxbGuid();
    }

    @OAProperty(isUnique = true, trackPrimitiveNull = false, displayLength = 6)
    @OAId()
    @XmlTransient
    @OAColumn(sqlType = java.sql.Types.INTEGER)
    public int getId() {
        return id;
    }
    public void setId(int newValue) {
        int old = id;
        fireBeforePropertyChange(P_Id, old, newValue);
        this.id = newValue;
        firePropertyChange(P_Id, old, this.id);
    }
    @XmlID
    @XmlAttribute(name="id")
    public String getJaxbId() {
        // note: jaxb spec requires id to be a string
        if (!getJaxbShouldInclude(P_Id)) return null;
        return ""+id;
    }
    public void setJaxbId(String id) {
        if (getJaxbAllowPropertyChange(P_Id, this.id, id)) {
            setId((int) OAConv.convert(int.class, id));
        }
    }

    @OAProperty(defaultValue = "new OADateTime()", displayLength = 15, isProcessed = true)
    @OAColumn(sqlType = java.sql.Types.TIMESTAMP)
    public OADateTime getCreated() {
        return created;
    }
    public void setCreated(OADateTime newValue) {
        OADateTime old = created;
        fireBeforePropertyChange(P_Created, old, newValue);
        this.created = newValue;
        firePropertyChange(P_Created, old, this.created);
    }
    @XmlElement(name="created", nillable=true)
    public OADateTime getJaxbCreated() {
        if (!getJaxbShouldInclude(P_Created)) return null;
        return getCreated();
    }
    public void setJaxbCreated(OADateTime newValue) {
        if (getJaxbAllowPropertyChange(P_Created, this.created, newValue)) {
            setCreated(newValue);
        }
    }

    @OAProperty(maxLength = 35, displayLength = 20)
    @OAColumn(maxLength = 35)
    public String getName() {
        return name;
    }
    public void setName(String newValue) {
        String old = name;
        fireBeforePropertyChange(P_Name, old, newValue);
        this.name = newValue;
        firePropertyChange(P_Name, old, this.name);
    }
    @XmlElement(name="name", nillable=true)
    public String getJaxbName() {
        if (!getJaxbShouldInclude(P_Name)) return null;
        return getName();
    }
    public void setJaxbName(String newValue) {
        if (getJaxbAllowPropertyChange(P_Name, this.name, newValue)) {
            setName(newValue);
        }
    }

    @OAProperty(displayLength = 6, isAutoSeq = true)
    @OAColumn(sqlType = java.sql.Types.INTEGER)
    public int getSeq() {
        return seq;
    }
    public void setSeq(int newValue) {
        int old = seq;
        fireBeforePropertyChange(P_Seq, old, newValue);
        this.seq = newValue;
        firePropertyChange(P_Seq, old, this.seq);
    }
    @XmlElement(name="seq")
    public Integer getJaxbSeq() {
        if (!getJaxbShouldInclude(P_Seq)) return null;
        return getSeq();
    }
    public void setJaxbSeq(Integer newValue) {
        if (getJaxbAllowPropertyChange(P_Seq, this.seq, newValue)) {
            setSeq(newValue);
        }
    }

    @OAOne(
        reverseName = Column.P_QueryColumns, 
        required = true, 
        allowCreateNew = false
    )
    @OAFkey(columns = {"ColumnId"})
    @XmlTransient
    public Column getColumn() {
        if (column == null) {
            column = (Column) getObject(P_Column);
        }
        return column;
    }
    public void setColumn(Column newValue) {
        Column old = this.column;
        fireBeforePropertyChange(P_Column, old, newValue);
        this.column = newValue;
        firePropertyChange(P_Column, old, this.column);
    }
    @XmlElement(name="column", required=true)
    public Column getJaxbColumn() {
        Object obj = super.getJaxbObject(P_Column);
        return (Column) obj;
    }
    public void setJaxbColumn(Column newValue) {
        if (getJaxbAllowPropertyChange(P_Column, this.column, newValue)) {
            setColumn(newValue);
        }
    }
    @XmlElement(name="refColumn")
    @XmlIDREF
    public Column getJaxbRefColumn() {
        Object obj = super.getJaxbRefObject(P_Column);
        return (Column) obj;
    }
    public void setJaxbRefColumn(Column newValue) {
        setJaxbColumn(newValue);
    }
    @XmlElement(name="columnId", required=true)
    public String getJaxbColumnId() {
        String s = super.getJaxbId(P_Column);
        return s;
    }
    public void setJaxbColumnId(String id) {
        setJaxbId(P_Column, id);
    }
     
    @OAOne(
        displayName = "Json Column", 
        reverseName = JsonColumn.P_QueryColumns, 
        allowCreateNew = false
    )
    @OAFkey(columns = {"JsonColumnId"})
    @XmlTransient
    public JsonColumn getJsonColumn() {
        if (jsonColumn == null) {
            jsonColumn = (JsonColumn) getObject(P_JsonColumn);
        }
        return jsonColumn;
    }
    public void setJsonColumn(JsonColumn newValue) {
        JsonColumn old = this.jsonColumn;
        fireBeforePropertyChange(P_JsonColumn, old, newValue);
        this.jsonColumn = newValue;
        firePropertyChange(P_JsonColumn, old, this.jsonColumn);
    }
    @OAObjCallback(enabledProperty = QueryColumn.P_Column+"."+Column.P_ColumnType+"."+ColumnType.P_IsJsonb)
    public void jsonColumnCallback(OAObjectCallback cb) {
        if (cb == null) return;
        switch (cb.getType()) {
        }
    }
    @XmlElement(name="jsonColumn", nillable=true)
    public JsonColumn getJaxbJsonColumn() {
        Object obj = super.getJaxbObject(P_JsonColumn);
        return (JsonColumn) obj;
    }
    public void setJaxbJsonColumn(JsonColumn newValue) {
        if (getJaxbAllowPropertyChange(P_JsonColumn, this.jsonColumn, newValue)) {
            setJsonColumn(newValue);
        }
    }
    @XmlElement(name="refJsonColumn")
    @XmlIDREF
    public JsonColumn getJaxbRefJsonColumn() {
        Object obj = super.getJaxbRefObject(P_JsonColumn);
        return (JsonColumn) obj;
    }
    public void setJaxbRefJsonColumn(JsonColumn newValue) {
        setJaxbJsonColumn(newValue);
    }
    @XmlElement(name="jsonColumnId", nillable=true)
    public String getJaxbJsonColumnId() {
        String s = super.getJaxbId(P_JsonColumn);
        return s;
    }
    public void setJaxbJsonColumnId(String id) {
        setJaxbId(P_JsonColumn, id);
    }
     
    @OAOne(
        displayName = "Query Table", 
        reverseName = QueryTable.P_QueryColumns, 
        required = true, 
        allowCreateNew = false
    )
    @OAFkey(columns = {"QueryTableId"})
    @XmlTransient
    public QueryTable getQueryTable() {
        if (queryTable == null) {
            queryTable = (QueryTable) getObject(P_QueryTable);
        }
        return queryTable;
    }
    public void setQueryTable(QueryTable newValue) {
        QueryTable old = this.queryTable;
        fireBeforePropertyChange(P_QueryTable, old, newValue);
        this.queryTable = newValue;
        firePropertyChange(P_QueryTable, old, this.queryTable);
    }
    @XmlElement(name="queryTable", required=true)
    public QueryTable getJaxbQueryTable() {
        Object obj = super.getJaxbObject(P_QueryTable);
        return (QueryTable) obj;
    }
    public void setJaxbQueryTable(QueryTable newValue) {
        if (getJaxbAllowPropertyChange(P_QueryTable, this.queryTable, newValue)) {
            setQueryTable(newValue);
        }
    }
    @XmlElement(name="refQueryTable")
    @XmlIDREF
    public QueryTable getJaxbRefQueryTable() {
        Object obj = super.getJaxbRefObject(P_QueryTable);
        return (QueryTable) obj;
    }
    public void setJaxbRefQueryTable(QueryTable newValue) {
        setJaxbQueryTable(newValue);
    }
    @XmlElement(name="queryTableId", required=true)
    public String getJaxbQueryTableId() {
        String s = super.getJaxbId(P_QueryTable);
        return s;
    }
    public void setJaxbQueryTableId(String id) {
        setJaxbId(P_QueryTable, id);
    }
     
    public void load(ResultSet rs, int id) throws SQLException {
        this.id = id;
        java.sql.Timestamp timestamp;
        timestamp = rs.getTimestamp(2);
        if (timestamp != null) this.created = new OADateTime(timestamp);
        this.name = rs.getString(3);
        this.seq = (int) rs.getInt(4);
        if (rs.wasNull()) {
            OAObjectInfoDelegate.setPrimitiveNull(this, QueryColumn.P_Seq, true);
        }
        int columnFkey = rs.getInt(5);
        if (!rs.wasNull() && columnFkey > 0) {
            setProperty(P_Column, new OAObjectKey(columnFkey));
        }
        int jsonColumnFkey = rs.getInt(6);
        if (!rs.wasNull() && jsonColumnFkey > 0) {
            setProperty(P_JsonColumn, new OAObjectKey(jsonColumnFkey));
        }
        int queryTableFkey = rs.getInt(7);
        if (!rs.wasNull() && queryTableFkey > 0) {
            setProperty(P_QueryTable, new OAObjectKey(queryTableFkey));
        }
        if (rs.getMetaData().getColumnCount() != 7) {
            throw new SQLException("invalid number of columns for load method");
        }

        this.changedFlag = false;
        this.newFlag = false;
    }
    public static QueryColumn jaxbCreate() {
        QueryColumn queryColumn = (QueryColumn) OAObject.jaxbCreateInstance(QueryColumn.class);
        if (queryColumn == null) queryColumn = new QueryColumn();
        return queryColumn;
    }
}
 
