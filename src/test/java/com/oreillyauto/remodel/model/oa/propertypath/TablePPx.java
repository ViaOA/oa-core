// Generated by OABuilder
package com.oreillyauto.remodel.model.oa.propertypath;
 
import java.io.Serializable;
import com.oreillyauto.remodel.model.oa.*;
 
public class TablePPx implements PPxInterface, Serializable {
    private static final long serialVersionUID = 1L;
    public final String pp;  // propertyPath
     
    public TablePPx(String name) {
        this(null, name);
    }

    public TablePPx(PPxInterface parent, String name) {
        String s = null;
        if (parent != null) {
            s = parent.toString();
        }
        if (s == null) s = "";
        if (name != null && name.length() > 0) {
            if (s.length() > 0 && name.charAt(0) != ':') s += ".";
            s += name;
        }
        pp = s;
    }

    public ColumnPPx columns() {
        ColumnPPx ppx = new ColumnPPx(this, Table.P_Columns);
        return ppx;
    }

    public DatabasePPx database() {
        DatabasePPx ppx = new DatabasePPx(this, Table.P_Database);
        return ppx;
    }

    public ForeignTablePPx foreignTables() {
        ForeignTablePPx ppx = new ForeignTablePPx(this, Table.P_ForeignTables);
        return ppx;
    }

    public IndexPPx indexes() {
        IndexPPx ppx = new IndexPPx(this, Table.P_Indexes);
        return ppx;
    }

    public QueryTablePPx queryTables() {
        QueryTablePPx ppx = new QueryTablePPx(this, Table.P_QueryTables);
        return ppx;
    }

    public RepositoryPPx repositories() {
        RepositoryPPx ppx = new RepositoryPPx(this, Table.P_Repositories);
        return ppx;
    }

    public TableCategoryPPx tableCategories() {
        TableCategoryPPx ppx = new TableCategoryPPx(this, Table.P_TableCategories);
        return ppx;
    }

    public ForeignTablePPx tableForeignTables() {
        ForeignTablePPx ppx = new ForeignTablePPx(this, Table.P_TableForeignTables);
        return ppx;
    }

    public String id() {
        return pp + "." + Table.P_Id;
    }

    public String created() {
        return pp + "." + Table.P_Created;
    }

    public String name() {
        return pp + "." + Table.P_Name;
    }

    public String newName() {
        return pp + "." + Table.P_NewName;
    }

    public String description() {
        return pp + "." + Table.P_Description;
    }

    public String abbrevName() {
        return pp + "." + Table.P_AbbrevName;
    }

    public String useType() {
        return pp + "." + Table.P_UseType;
    }

    public String notes() {
        return pp + "." + Table.P_Notes;
    }

    @Override
    public String toString() {
        return pp;
    }
    public String pp() {
        return pp;
    }
}
 
