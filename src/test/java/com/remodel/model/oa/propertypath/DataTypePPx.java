// Generated by OABuilder
package com.remodel.model.oa.propertypath;
 
import java.io.Serializable;

import com.remodel.model.oa.*;
 
public class DataTypePPx implements PPxInterface, Serializable {
    private static final long serialVersionUID = 1L;
    public final String pp;  // propertyPath
     
    public DataTypePPx(String name) {
        this(null, name);
    }

    public DataTypePPx(PPxInterface parent, String name) {
        String s = null;
        if (parent != null) {
            s = parent.toString();
        }
        if (s == null) s = "";
        if (name != null && name.length() > 0) {
            if (s.length() > 0 && name.charAt(0) != ':') s += ".";
            s += name;
        }
        pp = s;
    }

    public ColumnTypePPx calcColumnTypes() {
        ColumnTypePPx ppx = new ColumnTypePPx(this, DataType.P_CalcColumnTypes);
        return ppx;
    }

    public JsonColumnPPx calcJsonColumns() {
        JsonColumnPPx ppx = new JsonColumnPPx(this, DataType.P_CalcJsonColumns);
        return ppx;
    }

    public ColumnTypePPx columnTypes() {
        ColumnTypePPx ppx = new ColumnTypePPx(this, DataType.P_ColumnTypes);
        return ppx;
    }

    public JavaTypePPx javaTypes() {
        JavaTypePPx ppx = new JavaTypePPx(this, DataType.P_JavaTypes);
        return ppx;
    }

    public JsonColumnPPx jsonColumns() {
        JsonColumnPPx ppx = new JsonColumnPPx(this, DataType.P_JsonColumns);
        return ppx;
    }

    public SqlTypePPx sqlTypes() {
        SqlTypePPx ppx = new SqlTypePPx(this, DataType.P_SqlTypes);
        return ppx;
    }

    public String id() {
        return pp + "." + DataType.P_Id;
    }

    public String created() {
        return pp + "." + DataType.P_Created;
    }

    public String name() {
        return pp + "." + DataType.P_Name;
    }

    public String description() {
        return pp + "." + DataType.P_Description;
    }

    public String type() {
        return pp + "." + DataType.P_Type;
    }

    public String isNumeric() {
        return pp + "." + DataType.P_IsNumeric;
    }

    public String isDecimal() {
        return pp + "." + DataType.P_IsDecimal;
    }

    public String seq() {
        return pp + "." + DataType.P_Seq;
    }

    @Override
    public String toString() {
        return pp;
    }
    public String pp() {
        return pp;
    }
}
 
