// Generated by OABuilder
package com.remodel.model.oa.propertypath;
 
import java.io.Serializable;

import com.remodel.model.oa.*;
 
public class DatabasePPx implements PPxInterface, Serializable {
    private static final long serialVersionUID = 1L;
    public final String pp;  // propertyPath
     
    public DatabasePPx(String name) {
        this(null, name);
    }

    public DatabasePPx(PPxInterface parent, String name) {
        String s = null;
        if (parent != null) {
            s = parent.toString();
        }
        if (s == null) s = "";
        if (name != null && name.length() > 0) {
            if (s.length() > 0 && name.charAt(0) != ':') s += ".";
            s += name;
        }
        pp = s;
    }

    public DatabaseTypePPx databaseType() {
        DatabaseTypePPx ppx = new DatabaseTypePPx(this, Database.P_DatabaseType);
        return ppx;
    }

    public ProjectPPx projects() {
        ProjectPPx ppx = new ProjectPPx(this, Database.P_Projects);
        return ppx;
    }

    public TableCategoryPPx tableCategories() {
        TableCategoryPPx ppx = new TableCategoryPPx(this, Database.P_TableCategories);
        return ppx;
    }

    public TablePPx tables() {
        TablePPx ppx = new TablePPx(this, Database.P_Tables);
        return ppx;
    }

    public String id() {
        return pp + "." + Database.P_Id;
    }

    public String created() {
        return pp + "." + Database.P_Created;
    }

    public String name() {
        return pp + "." + Database.P_Name;
    }

    public String description() {
        return pp + "." + Database.P_Description;
    }

    public String catalogName() {
        return pp + "." + Database.P_CatalogName;
    }

    public String schemeName() {
        return pp + "." + Database.P_SchemeName;
    }

    public String driverName() {
        return pp + "." + Database.P_DriverName;
    }

    public String jdbcUrl() {
        return pp + "." + Database.P_JdbcUrl;
    }

    public String userId() {
        return pp + "." + Database.P_UserId;
    }

    public String password() {
        return pp + "." + Database.P_Password;
    }

    public String modelFileName() {
        return pp + "." + Database.P_ModelFileName;
    }

    public String codeDirectory() {
        return pp + "." + Database.P_CodeDirectory;
    }

    public String console() {
        return pp + "." + Database.P_Console;
    }

    public String notes() {
        return pp + "." + Database.P_Notes;
    }

    public String display() {
        return pp + "." + Database.P_Display;
    }

    public String load() {
        return pp + ".load";
    }

    @Override
    public String toString() {
        return pp;
    }
    public String pp() {
        return pp;
    }
}
 
