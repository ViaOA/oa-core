// Generated by OABuilder
package com.remodel.model.oa.propertypath;
 
import java.io.Serializable;

import com.remodel.model.oa.*;
 
public class ForeignTableColumnPPx implements PPxInterface, Serializable {
    private static final long serialVersionUID = 1L;
    public final String pp;  // propertyPath
     
    public ForeignTableColumnPPx(String name) {
        this(null, name);
    }

    public ForeignTableColumnPPx(PPxInterface parent, String name) {
        String s = null;
        if (parent != null) {
            s = parent.toString();
        }
        if (s == null) s = "";
        if (name != null && name.length() > 0) {
            if (s.length() > 0 && name.charAt(0) != ':') s += ".";
            s += name;
        }
        pp = s;
    }

    public ForeignTablePPx foreignTable() {
        ForeignTablePPx ppx = new ForeignTablePPx(this, ForeignTableColumn.P_ForeignTable);
        return ppx;
    }

    public ColumnPPx fromColumn() {
        ColumnPPx ppx = new ColumnPPx(this, ForeignTableColumn.P_FromColumn);
        return ppx;
    }

    public JsonColumnPPx fromJsonColumn() {
        JsonColumnPPx ppx = new JsonColumnPPx(this, ForeignTableColumn.P_FromJsonColumn);
        return ppx;
    }

    public ColumnPPx toColumn() {
        ColumnPPx ppx = new ColumnPPx(this, ForeignTableColumn.P_ToColumn);
        return ppx;
    }

    public String id() {
        return pp + "." + ForeignTableColumn.P_Id;
    }

    public String created() {
        return pp + "." + ForeignTableColumn.P_Created;
    }

    public String fromColumnName() {
        return pp + "." + ForeignTableColumn.P_FromColumnName;
    }

    public String toColumnName() {
        return pp + "." + ForeignTableColumn.P_ToColumnName;
    }

    @Override
    public String toString() {
        return pp;
    }
    public String pp() {
        return pp;
    }
}
 
