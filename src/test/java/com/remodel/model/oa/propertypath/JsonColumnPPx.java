// Generated by OABuilder
package com.remodel.model.oa.propertypath;
 
import java.io.Serializable;

import com.remodel.model.oa.*;
 
public class JsonColumnPPx implements PPxInterface, Serializable {
    private static final long serialVersionUID = 1L;
    public final String pp;  // propertyPath
     
    public JsonColumnPPx(String name) {
        this(null, name);
    }

    public JsonColumnPPx(PPxInterface parent, String name) {
        String s = null;
        if (parent != null) {
            s = parent.toString();
        }
        if (s == null) s = "";
        if (name != null && name.length() > 0) {
            if (s.length() > 0 && name.charAt(0) != ':') s += ".";
            s += name;
        }
        pp = s;
    }

    public DataTypePPx calcDataType() {
        DataTypePPx ppx = new DataTypePPx(this, JsonColumn.P_CalcDataType);
        return ppx;
    }

    public DataTypePPx dataType() {
        DataTypePPx ppx = new DataTypePPx(this, JsonColumn.P_DataType);
        return ppx;
    }

    public ForeignTableColumnPPx fromForeignTableColumns() {
        ForeignTableColumnPPx ppx = new ForeignTableColumnPPx(this, JsonColumn.P_FromForeignTableColumns);
        return ppx;
    }

    public JavaTypePPx javaType() {
        JavaTypePPx ppx = new JavaTypePPx(this, JsonColumn.P_JavaType);
        return ppx;
    }

    public JsonObjectPPx jsonObject() {
        JsonObjectPPx ppx = new JsonObjectPPx(this, JsonColumn.P_JsonObject);
        return ppx;
    }

    public QueryColumnPPx queryColumns() {
        QueryColumnPPx ppx = new QueryColumnPPx(this, JsonColumn.P_QueryColumns);
        return ppx;
    }

    public String id() {
        return pp + "." + JsonColumn.P_Id;
    }

    public String created() {
        return pp + "." + JsonColumn.P_Created;
    }

    public String name() {
        return pp + "." + JsonColumn.P_Name;
    }

    public String seq() {
        return pp + "." + JsonColumn.P_Seq;
    }

    @Override
    public String toString() {
        return pp;
    }
    public String pp() {
        return pp;
    }
}
 
